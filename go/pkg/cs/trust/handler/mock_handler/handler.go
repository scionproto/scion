// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/scionproto/scion/go/pkg/cs/trust/handler (interfaces: ChainBuilder,RenewalRequestVerifier)

// Package mock_handler is a generated GoMock package.
package mock_handler

import (
	context "context"
	x509 "crypto/x509"
	gomock "github.com/golang/mock/gomock"
	cert_mgmt "github.com/scionproto/scion/go/lib/ctrl/cert_mgmt"
	reflect "reflect"
)

// MockChainBuilder is a mock of ChainBuilder interface
type MockChainBuilder struct {
	ctrl     *gomock.Controller
	recorder *MockChainBuilderMockRecorder
}

// MockChainBuilderMockRecorder is the mock recorder for MockChainBuilder
type MockChainBuilderMockRecorder struct {
	mock *MockChainBuilder
}

// NewMockChainBuilder creates a new mock instance
func NewMockChainBuilder(ctrl *gomock.Controller) *MockChainBuilder {
	mock := &MockChainBuilder{ctrl: ctrl}
	mock.recorder = &MockChainBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockChainBuilder) EXPECT() *MockChainBuilderMockRecorder {
	return m.recorder
}

// CreateChain mocks base method
func (m *MockChainBuilder) CreateChain(arg0 context.Context, arg1 *x509.CertificateRequest) ([]*x509.Certificate, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateChain", arg0, arg1)
	ret0, _ := ret[0].([]*x509.Certificate)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateChain indicates an expected call of CreateChain
func (mr *MockChainBuilderMockRecorder) CreateChain(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateChain", reflect.TypeOf((*MockChainBuilder)(nil).CreateChain), arg0, arg1)
}

// MockRenewalRequestVerifier is a mock of RenewalRequestVerifier interface
type MockRenewalRequestVerifier struct {
	ctrl     *gomock.Controller
	recorder *MockRenewalRequestVerifierMockRecorder
}

// MockRenewalRequestVerifierMockRecorder is the mock recorder for MockRenewalRequestVerifier
type MockRenewalRequestVerifierMockRecorder struct {
	mock *MockRenewalRequestVerifier
}

// NewMockRenewalRequestVerifier creates a new mock instance
func NewMockRenewalRequestVerifier(ctrl *gomock.Controller) *MockRenewalRequestVerifier {
	mock := &MockRenewalRequestVerifier{ctrl: ctrl}
	mock.recorder = &MockRenewalRequestVerifierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRenewalRequestVerifier) EXPECT() *MockRenewalRequestVerifierMockRecorder {
	return m.recorder
}

// VerifyChainRenewalRequest mocks base method
func (m *MockRenewalRequestVerifier) VerifyChainRenewalRequest(arg0 *cert_mgmt.ChainRenewalRequest, arg1 [][]*x509.Certificate) (*x509.CertificateRequest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyChainRenewalRequest", arg0, arg1)
	ret0, _ := ret[0].(*x509.CertificateRequest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// VerifyChainRenewalRequest indicates an expected call of VerifyChainRenewalRequest
func (mr *MockRenewalRequestVerifierMockRecorder) VerifyChainRenewalRequest(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyChainRenewalRequest", reflect.TypeOf((*MockRenewalRequestVerifier)(nil).VerifyChainRenewalRequest), arg0, arg1)
}
