#!/bin/bash

# Whenever a BR's interface local or remote port in the topology file is changed,
# and the BR's process receives a SIGHUP, it will reload the topology and
# use the new port for the interface.
#
# This test checks the following:
# 1. Update the port on one side of the link without changing the remote
#    on the other side -> expect traffic to be dropped
# 2. Update the remote port on the other side -> expect traffic to pass
# 3. Change ports to original -> expect traffic to pass

TEST_NAME="topo_br_reload_if_port"
TEST_TOPOLOGY="acceptance/topo_br_reload_util/Tinier.topo"

. acceptance/topo_br_reload_util/util.sh

test_setup() {
    base_setup
}

test_run() {
    set -e
    local orig_src=$(jq '.border_routers[].interfaces[].underlay.public' $SRC_TOPO)
    local addr_src=$(jq '.border_routers[].interfaces[].underlay.public | split(":")[0]' -r $SRC_TOPO)

    local orig_dst=$(jq '.border_routers[].interfaces[].underlay.public' $DST_TOPO)
    local addr_dst=$(jq '.border_routers[].interfaces[].underlay.public | split(":")[0]' -r $DST_TOPO)

    check_change_local_port
    check_change_remote_port
    check_change_initial_port
}

check_change_local_port() {
    check_connectivity "Start check_change_local_port"
    jq ".border_routers[].interfaces[].underlay.public = \"$addr_src:42424\"" $SRC_TOPO | sponge $SRC_TOPO
    ./tools/dc scion kill -s HUP scion_br"$SRC_IA_FILE"-1
    sleep 2
    check_logs "posixOutput starting addr=$addr_src:42424" $SRC_IA_FILE
    check_logs "posixInput starting addr=$addr_src:42424"  $SRC_IA_FILE
    bin/end2end_integration -src $SRC_IA -dst $DST_IA -attempts 1 -d -log.console=crit || local failed=$?
    if [ -z ${failed+x} ]; then
        echo "FAIL: Traffic still passes. End check_change_local_port"
        return 1
    fi
}

check_change_remote_port() {
    # Connectivity is broken at this point
    jq ".border_routers[].interfaces[].underlay.remote = \"$addr_src:42424\"" $DST_TOPO | sponge $DST_TOPO
    ./tools/dc scion kill -s HUP scion_br"$DST_IA_FILE"-1
    # make sure revocation is expired
    sleep 10
    check_logs "Remote:$addr_src:42424" $DST_IA_FILE
    check_connectivity "End check_change_remote_port"
}

check_change_initial_port() {
    check_connectivity "Start check_change_initial_port"
    jq ".border_routers[].interfaces[].underlay.public = $orig_src" $SRC_TOPO | sponge $SRC_TOPO
    jq ".border_routers[].interfaces[].underlay.remote = $orig_src" $DST_TOPO | sponge $DST_TOPO
    ./tools/dc scion kill -s HUP scion_br"$SRC_IA_FILE"-1
    ./tools/dc scion kill -s HUP scion_br"$DST_IA_FILE"-1
    check_connectivity "End check_change_initial_port"
}

PROGRAM=`basename "$0"`
COMMAND="$1"

case "$COMMAND" in
    name)
        echo $TEST_NAME ;;
    setup|run|teardown)
        "test_$COMMAND" ;;
    *) print_help; exit 1 ;;
esac

