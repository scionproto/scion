# Adapated from illicitonion's unreleased work 
# https://github.com/bazel-contrib/musl-toolchain
# Merit is his, mistakes are mine.
#
# This BUILD file is to be slapped on-top of an unpacked openwrt SDK (by way of http_archive build_file attr
# for example).

load("//:musl_cc_toolchain_config.bzl", "musl_cc_toolchain_config")
load("@rules_cc//cc:defs.bzl", "cc_toolchain")

package(default_visibility = ["//visibility:public"])

filegroup(
    name = "all_toolchain_files",
    srcs = glob([  # Everything except lib and lib64 because it contains/is a cyclink symlink.
    	 "staging_dir/toolchain-x86_64_gcc-12.3.0_musl/bin/**",
    	 "staging_dir/toolchain-x86_64_gcc-12.3.0_musl/include/**",
    	 "staging_dir/toolchain-x86_64_gcc-12.3.0_musl/info.mk",
    	 "staging_dir/toolchain-x86_64_gcc-12.3.0_musl/lib/b*/**", # Everything but the lib64 link
    	 "staging_dir/toolchain-x86_64_gcc-12.3.0_musl/lib/ld*/**",
    	 "staging_dir/toolchain-x86_64_gcc-12.3.0_musl/lib/lib64", # Just  the link.       
    	 "staging_dir/toolchain-x86_64_gcc-12.3.0_musl/lib/*.*",
    	 "staging_dir/toolchain-x86_64_gcc-12.3.0_musl/lib64", # Just the link. Don't traverse.
    	 "staging_dir/toolchain-x86_64_gcc-12.3.0_musl/lib/g*/**",
    	 "staging_dir/toolchain-x86_64_gcc-12.3.0_musl/libexec/**",
    	 "staging_dir/toolchain-x86_64_gcc-12.3.0_musl/share/**",
    	 "staging_dir/toolchain-x86_64_gcc-12.3.0_musl/usr/**",
    	 "staging_dir/toolchain-x86_64_gcc-12.3.0_musl/x86_64*/**",
    ]),
    visibility = ["//visibility:public"],
)

[
    filegroup(
        name = "musl_" + bin + "_files",
        srcs = ["bin/x86_64-linux-musl-" + bin],
    )
    for bin in [
        "ar",
        "ld",
        "objcopy",
        "strip",
        "objdump",
    ]
]

filegroup(name = "empty")

musl_cc_toolchain_config(name = "k8_musl_toolchain_config", target_arch = "x86_64")

cc_toolchain(
    name = "musl_toolchain",
    all_files = ":all_toolchain_files",
    ar_files = ":musl_ar_files",
    as_files = ":all_files",
    compiler_files = ":all_toolchain_files",
    coverage_files = ":all_toolchain_files",
    dwp_files = ":empty",
    linker_files = ":all_toolchain_files",
    objcopy_files = ":musl_objcopy_files",
    strip_files = ":musl_strip_files",
    supports_param_files = 0,
    toolchain_config = ":k8_musl_toolchain_config",
    toolchain_identifier = "k8-musl-toolchain",
)
