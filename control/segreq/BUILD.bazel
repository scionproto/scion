load("//tools/lint:go.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "authoritative.go",
        "doc.go",
        "expander.go",
        "fetcher.go",
        "forwarder.go",
        "helpers.go",
        "splitter.go",
    ],
    importpath = "github.com/scionproto/scion/control/segreq",
    visibility = ["//visibility:public"],
    deps = [
        "//control/segutil:go_default_library",
        "//pkg/addr:go_default_library",
        "//pkg/private/serrors:go_default_library",
        "//pkg/segment:go_default_library",
        "//pkg/snet:go_default_library",
        "//pkg/snet/addrutil:go_default_library",
        "//private/pathdb:go_default_library",
        "//private/pathdb/query:go_default_library",
        "//private/revcache:go_default_library",
        "//private/segment/segfetcher:go_default_library",
        "//private/segment/seghandler:go_default_library",
        "//private/segment/verifier:go_default_library",
        "//private/trust:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "authoritative_test.go",
        "forwarder_test.go",
        "helpers_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//pkg/addr:go_default_library",
        "//pkg/private/xtest:go_default_library",
        "//pkg/segment:go_default_library",
        "//private/trust:go_default_library",
        "//private/trust/mock_trust:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
    ],
)
