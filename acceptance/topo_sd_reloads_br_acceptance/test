#!/bin/bash

# Whenever the BR's internal address in the topology file of a SD server is
# changed, if the SD process receives a SIGHUP it will reload the config and
# use the new internal address as next-hop in the replies to path requests from
# clients.

. acceptance/common.sh

TEST_NAME="topo_sd_reloads_br"
TEST_TOPOLOGY="topology/Tiny.topo"

SRC_IA=${SRC_IA:-1-ff00:0:112}
SRC_IA_FILE="$(ia_file $SRC_IA)"
SRC_AS_FILE="$(as_file $SRC_IA)"
DST_IA=${DST_IA:-1-ff00:0:110}

test_setup() {
    set -e
    ./scion.sh topology nobuild zkclean -c $TEST_TOPOLOGY -d -t
    sed -i '/\[logging\.file\]/a FlushInterval = 1' gen/ISD1/*/endhost/sd.toml
    ./scion.sh run nobuild
    ./tools/dc start tester_$SRC_IA_FILE
    docker_status
}

test_run() {
    set -e
    local topo_file="gen/ISD1/AS$SRC_AS_FILE/endhost/topology.json"
    jq '.BorderRouters[].InternalAddrs.IPv4.PublicOverlay = {Addr: "127.42.42.42", OverlayPort: 39999}' $topo_file | sponge $topo_file
    ./tools/dc scion kill -s HUP scion_sd$SRC_IA_FILE
    sleep 6
    ./tools/dc exec_tester $SRC_IA_FILE bin/showpaths -srcIA $SRC_IA -dstIA $DST_IA -sciondFromIA || true
    sleep 2
    grep -q "NextHop=\[127\.42\.42\.42\]:39999" "logs/sd$SRC_IA_FILE.log" || \
        fail "SD Path reply with next-hop 127.42.42.42:39999 not found in logs"
}

print_help() {
    echo
	cat <<-_EOF
	    $PROGRAM name
	        return the name of this test
	    $PROGRAM setup
	        execute only the setup phase.
	    $PROGRAM run
	        execute only the run phase.
	    $PROGRAM teardown
	        execute only the teardown phase.
	_EOF
}

PROGRAM=`basename "$0"`
COMMAND="$1"

case "$COMMAND" in
    name)
        echo $TEST_NAME ;;
    setup|run|teardown)
        "test_$COMMAND" ;;
    *) print_help; exit 1 ;;
esac

