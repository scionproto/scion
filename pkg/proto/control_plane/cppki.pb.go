// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.1
// source: proto/control_plane/v1/cppki.proto

package control_plane

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChainsRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	IsdAs             uint64                 `protobuf:"varint,1,opt,name=isd_as,json=isdAs,proto3" json:"isd_as,omitempty"`
	SubjectKeyId      []byte                 `protobuf:"bytes,2,opt,name=subject_key_id,json=subjectKeyId,proto3" json:"subject_key_id,omitempty"`
	AtLeastValidUntil *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=at_least_valid_until,json=atLeastValidUntil,proto3" json:"at_least_valid_until,omitempty"`
	AtLeastValidSince *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=at_least_valid_since,json=atLeastValidSince,proto3" json:"at_least_valid_since,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ChainsRequest) Reset() {
	*x = ChainsRequest{}
	mi := &file_proto_control_plane_v1_cppki_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChainsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainsRequest) ProtoMessage() {}

func (x *ChainsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_cppki_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainsRequest.ProtoReflect.Descriptor instead.
func (*ChainsRequest) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_cppki_proto_rawDescGZIP(), []int{0}
}

func (x *ChainsRequest) GetIsdAs() uint64 {
	if x != nil {
		return x.IsdAs
	}
	return 0
}

func (x *ChainsRequest) GetSubjectKeyId() []byte {
	if x != nil {
		return x.SubjectKeyId
	}
	return nil
}

func (x *ChainsRequest) GetAtLeastValidUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.AtLeastValidUntil
	}
	return nil
}

func (x *ChainsRequest) GetAtLeastValidSince() *timestamppb.Timestamp {
	if x != nil {
		return x.AtLeastValidSince
	}
	return nil
}

type ChainsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chains        []*Chain               `protobuf:"bytes,1,rep,name=chains,proto3" json:"chains,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChainsResponse) Reset() {
	*x = ChainsResponse{}
	mi := &file_proto_control_plane_v1_cppki_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChainsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainsResponse) ProtoMessage() {}

func (x *ChainsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_cppki_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainsResponse.ProtoReflect.Descriptor instead.
func (*ChainsResponse) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_cppki_proto_rawDescGZIP(), []int{1}
}

func (x *ChainsResponse) GetChains() []*Chain {
	if x != nil {
		return x.Chains
	}
	return nil
}

type Chain struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AsCert        []byte                 `protobuf:"bytes,1,opt,name=as_cert,json=asCert,proto3" json:"as_cert,omitempty"`
	CaCert        []byte                 `protobuf:"bytes,2,opt,name=ca_cert,json=caCert,proto3" json:"ca_cert,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Chain) Reset() {
	*x = Chain{}
	mi := &file_proto_control_plane_v1_cppki_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chain) ProtoMessage() {}

func (x *Chain) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_cppki_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chain.ProtoReflect.Descriptor instead.
func (*Chain) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_cppki_proto_rawDescGZIP(), []int{2}
}

func (x *Chain) GetAsCert() []byte {
	if x != nil {
		return x.AsCert
	}
	return nil
}

func (x *Chain) GetCaCert() []byte {
	if x != nil {
		return x.CaCert
	}
	return nil
}

type TRCRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Isd           uint32                 `protobuf:"varint,1,opt,name=isd,proto3" json:"isd,omitempty"`
	Base          uint64                 `protobuf:"varint,2,opt,name=base,proto3" json:"base,omitempty"`
	Serial        uint64                 `protobuf:"varint,3,opt,name=serial,proto3" json:"serial,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TRCRequest) Reset() {
	*x = TRCRequest{}
	mi := &file_proto_control_plane_v1_cppki_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TRCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRCRequest) ProtoMessage() {}

func (x *TRCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_cppki_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRCRequest.ProtoReflect.Descriptor instead.
func (*TRCRequest) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_cppki_proto_rawDescGZIP(), []int{3}
}

func (x *TRCRequest) GetIsd() uint32 {
	if x != nil {
		return x.Isd
	}
	return 0
}

func (x *TRCRequest) GetBase() uint64 {
	if x != nil {
		return x.Base
	}
	return 0
}

func (x *TRCRequest) GetSerial() uint64 {
	if x != nil {
		return x.Serial
	}
	return 0
}

type TRCResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Trc           []byte                 `protobuf:"bytes,1,opt,name=trc,proto3" json:"trc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TRCResponse) Reset() {
	*x = TRCResponse{}
	mi := &file_proto_control_plane_v1_cppki_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TRCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRCResponse) ProtoMessage() {}

func (x *TRCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_cppki_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRCResponse.ProtoReflect.Descriptor instead.
func (*TRCResponse) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_cppki_proto_rawDescGZIP(), []int{4}
}

func (x *TRCResponse) GetTrc() []byte {
	if x != nil {
		return x.Trc
	}
	return nil
}

type VerificationKeyID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsdAs         uint64                 `protobuf:"varint,1,opt,name=isd_as,json=isdAs,proto3" json:"isd_as,omitempty"`
	SubjectKeyId  []byte                 `protobuf:"bytes,2,opt,name=subject_key_id,json=subjectKeyId,proto3" json:"subject_key_id,omitempty"`
	TrcBase       uint64                 `protobuf:"varint,3,opt,name=trc_base,json=trcBase,proto3" json:"trc_base,omitempty"`
	TrcSerial     uint64                 `protobuf:"varint,4,opt,name=trc_serial,json=trcSerial,proto3" json:"trc_serial,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerificationKeyID) Reset() {
	*x = VerificationKeyID{}
	mi := &file_proto_control_plane_v1_cppki_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerificationKeyID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationKeyID) ProtoMessage() {}

func (x *VerificationKeyID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_cppki_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationKeyID.ProtoReflect.Descriptor instead.
func (*VerificationKeyID) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_cppki_proto_rawDescGZIP(), []int{5}
}

func (x *VerificationKeyID) GetIsdAs() uint64 {
	if x != nil {
		return x.IsdAs
	}
	return 0
}

func (x *VerificationKeyID) GetSubjectKeyId() []byte {
	if x != nil {
		return x.SubjectKeyId
	}
	return nil
}

func (x *VerificationKeyID) GetTrcBase() uint64 {
	if x != nil {
		return x.TrcBase
	}
	return 0
}

func (x *VerificationKeyID) GetTrcSerial() uint64 {
	if x != nil {
		return x.TrcSerial
	}
	return 0
}

var File_proto_control_plane_v1_cppki_proto protoreflect.FileDescriptor

const file_proto_control_plane_v1_cppki_proto_rawDesc = "" +
	"\n" +
	"\"proto/control_plane/v1/cppki.proto\x12\x16proto.control_plane.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xe6\x01\n" +
	"\rChainsRequest\x12\x15\n" +
	"\x06isd_as\x18\x01 \x01(\x04R\x05isdAs\x12$\n" +
	"\x0esubject_key_id\x18\x02 \x01(\fR\fsubjectKeyId\x12K\n" +
	"\x14at_least_valid_until\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x11atLeastValidUntil\x12K\n" +
	"\x14at_least_valid_since\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x11atLeastValidSince\"G\n" +
	"\x0eChainsResponse\x125\n" +
	"\x06chains\x18\x01 \x03(\v2\x1d.proto.control_plane.v1.ChainR\x06chains\"9\n" +
	"\x05Chain\x12\x17\n" +
	"\aas_cert\x18\x01 \x01(\fR\x06asCert\x12\x17\n" +
	"\aca_cert\x18\x02 \x01(\fR\x06caCert\"J\n" +
	"\n" +
	"TRCRequest\x12\x10\n" +
	"\x03isd\x18\x01 \x01(\rR\x03isd\x12\x12\n" +
	"\x04base\x18\x02 \x01(\x04R\x04base\x12\x16\n" +
	"\x06serial\x18\x03 \x01(\x04R\x06serial\"\x1f\n" +
	"\vTRCResponse\x12\x10\n" +
	"\x03trc\x18\x01 \x01(\fR\x03trc\"\x8a\x01\n" +
	"\x11VerificationKeyID\x12\x15\n" +
	"\x06isd_as\x18\x01 \x01(\x04R\x05isdAs\x12$\n" +
	"\x0esubject_key_id\x18\x02 \x01(\fR\fsubjectKeyId\x12\x19\n" +
	"\btrc_base\x18\x03 \x01(\x04R\atrcBase\x12\x1d\n" +
	"\n" +
	"trc_serial\x18\x04 \x01(\x04R\ttrcSerial2\xc3\x01\n" +
	"\x14TrustMaterialService\x12Y\n" +
	"\x06Chains\x12%.proto.control_plane.v1.ChainsRequest\x1a&.proto.control_plane.v1.ChainsResponse\"\x00\x12P\n" +
	"\x03TRC\x12\".proto.control_plane.v1.TRCRequest\x1a#.proto.control_plane.v1.TRCResponse\"\x00B5Z3github.com/scionproto/scion/pkg/proto/control_planeb\x06proto3"

var (
	file_proto_control_plane_v1_cppki_proto_rawDescOnce sync.Once
	file_proto_control_plane_v1_cppki_proto_rawDescData []byte
)

func file_proto_control_plane_v1_cppki_proto_rawDescGZIP() []byte {
	file_proto_control_plane_v1_cppki_proto_rawDescOnce.Do(func() {
		file_proto_control_plane_v1_cppki_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_control_plane_v1_cppki_proto_rawDesc), len(file_proto_control_plane_v1_cppki_proto_rawDesc)))
	})
	return file_proto_control_plane_v1_cppki_proto_rawDescData
}

var file_proto_control_plane_v1_cppki_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_control_plane_v1_cppki_proto_goTypes = []any{
	(*ChainsRequest)(nil),         // 0: proto.control_plane.v1.ChainsRequest
	(*ChainsResponse)(nil),        // 1: proto.control_plane.v1.ChainsResponse
	(*Chain)(nil),                 // 2: proto.control_plane.v1.Chain
	(*TRCRequest)(nil),            // 3: proto.control_plane.v1.TRCRequest
	(*TRCResponse)(nil),           // 4: proto.control_plane.v1.TRCResponse
	(*VerificationKeyID)(nil),     // 5: proto.control_plane.v1.VerificationKeyID
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_proto_control_plane_v1_cppki_proto_depIdxs = []int32{
	6, // 0: proto.control_plane.v1.ChainsRequest.at_least_valid_until:type_name -> google.protobuf.Timestamp
	6, // 1: proto.control_plane.v1.ChainsRequest.at_least_valid_since:type_name -> google.protobuf.Timestamp
	2, // 2: proto.control_plane.v1.ChainsResponse.chains:type_name -> proto.control_plane.v1.Chain
	0, // 3: proto.control_plane.v1.TrustMaterialService.Chains:input_type -> proto.control_plane.v1.ChainsRequest
	3, // 4: proto.control_plane.v1.TrustMaterialService.TRC:input_type -> proto.control_plane.v1.TRCRequest
	1, // 5: proto.control_plane.v1.TrustMaterialService.Chains:output_type -> proto.control_plane.v1.ChainsResponse
	4, // 6: proto.control_plane.v1.TrustMaterialService.TRC:output_type -> proto.control_plane.v1.TRCResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_control_plane_v1_cppki_proto_init() }
func file_proto_control_plane_v1_cppki_proto_init() {
	if File_proto_control_plane_v1_cppki_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_control_plane_v1_cppki_proto_rawDesc), len(file_proto_control_plane_v1_cppki_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_control_plane_v1_cppki_proto_goTypes,
		DependencyIndexes: file_proto_control_plane_v1_cppki_proto_depIdxs,
		MessageInfos:      file_proto_control_plane_v1_cppki_proto_msgTypes,
	}.Build()
	File_proto_control_plane_v1_cppki_proto = out.File
	file_proto_control_plane_v1_cppki_proto_goTypes = nil
	file_proto_control_plane_v1_cppki_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TrustMaterialServiceClient is the client API for TrustMaterialService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TrustMaterialServiceClient interface {
	Chains(ctx context.Context, in *ChainsRequest, opts ...grpc.CallOption) (*ChainsResponse, error)
	TRC(ctx context.Context, in *TRCRequest, opts ...grpc.CallOption) (*TRCResponse, error)
}

type trustMaterialServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTrustMaterialServiceClient(cc grpc.ClientConnInterface) TrustMaterialServiceClient {
	return &trustMaterialServiceClient{cc}
}

func (c *trustMaterialServiceClient) Chains(ctx context.Context, in *ChainsRequest, opts ...grpc.CallOption) (*ChainsResponse, error) {
	out := new(ChainsResponse)
	err := c.cc.Invoke(ctx, "/proto.control_plane.v1.TrustMaterialService/Chains", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trustMaterialServiceClient) TRC(ctx context.Context, in *TRCRequest, opts ...grpc.CallOption) (*TRCResponse, error) {
	out := new(TRCResponse)
	err := c.cc.Invoke(ctx, "/proto.control_plane.v1.TrustMaterialService/TRC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TrustMaterialServiceServer is the server API for TrustMaterialService service.
type TrustMaterialServiceServer interface {
	Chains(context.Context, *ChainsRequest) (*ChainsResponse, error)
	TRC(context.Context, *TRCRequest) (*TRCResponse, error)
}

// UnimplementedTrustMaterialServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTrustMaterialServiceServer struct {
}

func (*UnimplementedTrustMaterialServiceServer) Chains(context.Context, *ChainsRequest) (*ChainsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Chains not implemented")
}
func (*UnimplementedTrustMaterialServiceServer) TRC(context.Context, *TRCRequest) (*TRCResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TRC not implemented")
}

func RegisterTrustMaterialServiceServer(s *grpc.Server, srv TrustMaterialServiceServer) {
	s.RegisterService(&_TrustMaterialService_serviceDesc, srv)
}

func _TrustMaterialService_Chains_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChainsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrustMaterialServiceServer).Chains(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.control_plane.v1.TrustMaterialService/Chains",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrustMaterialServiceServer).Chains(ctx, req.(*ChainsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TrustMaterialService_TRC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TRCRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrustMaterialServiceServer).TRC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.control_plane.v1.TrustMaterialService/TRC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrustMaterialServiceServer).TRC(ctx, req.(*TRCRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TrustMaterialService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.control_plane.v1.TrustMaterialService",
	HandlerType: (*TrustMaterialServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Chains",
			Handler:    _TrustMaterialService_Chains_Handler,
		},
		{
			MethodName: "TRC",
			Handler:    _TrustMaterialService_TRC_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/control_plane/v1/cppki.proto",
}
