load("//tools/lint:go.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "messages.go",
        "resolver.go",
        "svc.go",
    ],
    importpath = "github.com/scionproto/scion/private/svc",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/addr:go_default_library",
        "//pkg/private/common:go_default_library",
        "//pkg/private/serrors:go_default_library",
        "//pkg/proto/control_plane:go_default_library",
        "//pkg/snet:go_default_library",
        "//private/svc/internal/ctxconn:go_default_library",
        "@com_github_opentracing_opentracing_go//:go_default_library",
        "@com_github_opentracing_opentracing_go//ext:go_default_library",
        "@org_golang_google_protobuf//proto:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "messages_test.go",
        "resolver_test.go",
        "svc_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//pkg/addr:go_default_library",
        "//pkg/private/serrors:go_default_library",
        "//pkg/private/xtest:go_default_library",
        "//pkg/proto/control_plane:go_default_library",
        "//pkg/slayers/path/empty:go_default_library",
        "//pkg/snet:go_default_library",
        "//pkg/snet/mock_snet:go_default_library",
        "//pkg/snet/path:go_default_library",
        "//private/svc/mock_svc:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
        "@org_golang_google_protobuf//proto:go_default_library",
    ],
)
