steps:
  - label: ":bazel: Build scion code"
    if: build.message !~ /\[doc\]/
    command:
      # create version files so that deb and rpm release targets work.
      - ./tools/package-version 0.1.0-citest
      - bazel build --announce_rc //:all
    key: build
    retry:
      automatic:
        - exit_status: -1  # Agent was lost
        - exit_status: 255 # Forced agent shutdown
    timeout_in_minutes: 10
  - label: "UT: :bazel:/:bash: Unit tests & lint"
    if: build.message !~ /\[doc\]/
    command:
      - ./scion.sh test
      - ./scion.sh lint
    key: unit_tests
    artifact_paths:
      - "artifacts.out/**/*"
    retry:
      automatic:
        - exit_status: -1  # Agent was lost
        - exit_status: 255 # Forced agent shutdown
    timeout_in_minutes: 10
  - label: "Check generated"
    if: build.message !~ /\[doc\]/
    command:
      - mkdir -p /tmp/test-artifacts
      - cp go.mod go.sum go_deps.bzl /tmp/test-artifacts/
      - make godeps -B
      - bazel-${BUILDKITE_PIPELINE_SLUG}/external/go_sdk/bin/go mod tidy
      - diff -u /tmp/test-artifacts/go.mod go.mod
      - diff -u /tmp/test-artifacts/go.sum go.sum
      - diff -u /tmp/test-artifacts/go_deps.bzl go_deps.bzl
      - cp -R go/proto/ /tmp/test-artifacts/
      - make gogen
      - diff -ur /tmp/test-artifacts/proto/ go/proto/
      - mkdir -p /tmp/test-artifacts/licenses
      - ./tools/licenses.sh /tmp/test-artifacts/licenses $BUILDKITE_PIPELINE_SLUG
      - diff -rNu3 /tmp/test-artifacts/licenses ./licenses/data
    key: check_generated
    retry:
      automatic:
        - exit_status: -1  # Agent was lost
        - exit_status: 255 # Forced agent shutdown
  - label: "Lint"
    if: build.message =~ /\[doc\]/
    command: ./scion.sh lint
    key: lint
    retry:
      automatic:
        - exit_status: -1  # Agent was lost
        - exit_status: 255 # Forced agent shutdown
  - label: "IT: :bazel: "
    if: build.message !~ /\[doc\]/
    command:
    - bazel test //integration/...
    key: integration_tests
    artifact_paths:
      - "artifacts.out/**/*"
    retry:
      automatic:
        - exit_status: -1  # Agent was lost
        - exit_status: 255 # Forced agent shutdown
  - label: "IT: (svisor) Revocation tests"
    if: build.message !~ /\[doc\]/
    command:
      - bazel build //:scion //:scion-ci >/dev/null 2>&1
      - tar -xf bazel-bin/scion.tar -C bin --overwrite
      - tar -xf bazel-bin/scion-ci.tar -C bin --overwrite
      - ./scion.sh topology
      - ./scion.sh run && sleep 10
      - ./bin/end2end_integration -log.console warn
      - ./integration/revocation_test.sh
    key: revocation_tests
    plugins:
      - scionproto/metahook#v0.3.0:
          post-command: |
            echo "--- Shutting down SCION topology"
            ./scion.sh stop
            echo "SCION topology successfully shut down"
    artifact_paths:
      - "artifacts.out/**/*"
    retry:
      automatic:
        - exit_status: -1  # Agent was lost
        - exit_status: 255 # Forced agent shutdown
  - label: "IT: (svisor) {pp,end2end,scmp}"
    if: build.message !~ /\[doc\]/
    command:
    - bazel build //:scion //:scion-ci >/dev/null 2>&1
    - tar -xf bazel-bin/scion.tar -C bin --overwrite
    - tar -xf bazel-bin/scion-ci.tar -C bin --overwrite
    - ./scion.sh topology
    - ./scion.sh run && sleep 10
    - ./bin/pp_integration -log.console warn
    - ./bin/scmp_integration -log.console warn
    - ./bin/end2end_integration -log.console warn
    plugins:
      - scionproto/metahook#v0.3.0:
          post-command: |
            echo "--- Shutting down SCION topology"
            ./scion.sh stop
            echo "SCION topology successfully shut down"
    artifact_paths:
      - "artifacts.out/**/*"
    timeout_in_minutes: 10
    key: e2e_integration_tests
    retry:
      automatic:
        - exit_status: -1  # Agent was lost
        - exit_status: 255 # Forced agent shutdown
  - label: "IT: :docker:/topo E2E"
    if: build.message !~ /\[doc\]/
    command:
    - ./scion.sh topology -d
    - ./scion.sh run
    - docker-compose -f gen/scion-dc.yml -p scion up -d $(docker-compose -f gen/scion-dc.yml config --services | grep tester)
    - sleep 10
    - ./bin/end2end_integration -d -log.console warn
    plugins:
      - scionproto/metahook#v0.3.0:
          post-command: |
            echo "--- Shutting down SCION topology"
            ./scion.sh stop
            echo "SCION topology successfully shut down"
    artifact_paths:
      - "artifacts.out/**/*"
    timeout_in_minutes: 10
    key: docker_integration_e2e_default
    retry:
      automatic:
        - exit_status: -1  # Agent was lost
        - exit_status: 255 # Forced agent shutdown
