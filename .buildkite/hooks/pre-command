#!/bin/bash

if [[ "$BUILDKITE_PIPELINE_SLUG" =~ "performance" ]]; then
    exit 0
fi

. .buildkite/hooks/pre-exit

set -euo pipefail

echo "--- Pre-allocating hugepages"
sudo sysctl -w vm.nr_hugepages=100

echo "--- Remove google-auth"
# See anapaya/scion#5231 for more details.
sudo -H pip3 uninstall google-auth -y || true

echo "--- Enable loki log driver"
docker plugin enable loki || true

echo "--- Setting up bazel environment"

# ACCEPTANCE_ARTIFACTS is used for acceptance tests built with the "old"
# acceptance framework
export ACCEPTANCE_ARTIFACTS=/tmp/test-artifacts

if [ -z ${BAZEL_REMOTE_S3_ACCESS_KEY_ID+x} ]; then
    echo "S3 env not set, not starting bazel remote proxy"
    exit 0
fi

rm -f $HOME/.bazelrc
# Create a custom .bazelrc file in the home directory it takes precedence over
# the workspace rc file.
# We explicitly override --[no]stamp flag.
# --nostamp is required for better caching (only on non-release jobs).
if [ "$BUILDKITE_PIPELINE_SLUG" == "scion" ]; then
    echo "build --nostamp" > $HOME/.bazelrc
    # Also set a fixed GIT_VERSION so that the workspace_status_command always
    # returns the same value on CI to improve cache reuse.
    export GIT_VERSION="ci-fixed"
else
    echo "build --stamp" > $HOME/.bazelrc
fi
echo "test --test_env CI" >> $HOME/.bazelrc

echo "--- Starting bazel remote cache proxy"

# Start bazel remote cache proxy for S3
# Note that S3 keys are injected by buildkite, see
# https://buildkite.com/docs/pipelines/secrets#storing-secrets-with-the-elastic-ci-stack-for-aws
docker-compose -f .buildkite/hooks/bazel-remote.yml -p bazel_remote up -d
