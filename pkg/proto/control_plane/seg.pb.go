// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.1
// source: proto/control_plane/v1/seg.proto

package control_plane

import (
	context "context"
	crypto "github.com/scionproto/scion/pkg/proto/crypto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SegmentType int32

const (
	SegmentType_SEGMENT_TYPE_UNSPECIFIED SegmentType = 0
	SegmentType_SEGMENT_TYPE_UP          SegmentType = 1
	SegmentType_SEGMENT_TYPE_DOWN        SegmentType = 2
	SegmentType_SEGMENT_TYPE_CORE        SegmentType = 3
)

// Enum value maps for SegmentType.
var (
	SegmentType_name = map[int32]string{
		0: "SEGMENT_TYPE_UNSPECIFIED",
		1: "SEGMENT_TYPE_UP",
		2: "SEGMENT_TYPE_DOWN",
		3: "SEGMENT_TYPE_CORE",
	}
	SegmentType_value = map[string]int32{
		"SEGMENT_TYPE_UNSPECIFIED": 0,
		"SEGMENT_TYPE_UP":          1,
		"SEGMENT_TYPE_DOWN":        2,
		"SEGMENT_TYPE_CORE":        3,
	}
)

func (x SegmentType) Enum() *SegmentType {
	p := new(SegmentType)
	*p = x
	return p
}

func (x SegmentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SegmentType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_control_plane_v1_seg_proto_enumTypes[0].Descriptor()
}

func (SegmentType) Type() protoreflect.EnumType {
	return &file_proto_control_plane_v1_seg_proto_enumTypes[0]
}

func (x SegmentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SegmentType.Descriptor instead.
func (SegmentType) EnumDescriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{0}
}

type SegmentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SrcIsdAs      uint64                 `protobuf:"varint,1,opt,name=src_isd_as,json=srcIsdAs,proto3" json:"src_isd_as,omitempty"`
	DstIsdAs      uint64                 `protobuf:"varint,2,opt,name=dst_isd_as,json=dstIsdAs,proto3" json:"dst_isd_as,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SegmentsRequest) Reset() {
	*x = SegmentsRequest{}
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SegmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentsRequest) ProtoMessage() {}

func (x *SegmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentsRequest.ProtoReflect.Descriptor instead.
func (*SegmentsRequest) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{0}
}

func (x *SegmentsRequest) GetSrcIsdAs() uint64 {
	if x != nil {
		return x.SrcIsdAs
	}
	return 0
}

func (x *SegmentsRequest) GetDstIsdAs() uint64 {
	if x != nil {
		return x.DstIsdAs
	}
	return 0
}

type SegmentsResponse struct {
	state                       protoimpl.MessageState               `protogen:"open.v1"`
	Segments                    map[int32]*SegmentsResponse_Segments `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	DeprecatedSignedRevocations [][]byte                             `protobuf:"bytes,1000,rep,name=deprecated_signed_revocations,json=deprecatedSignedRevocations,proto3" json:"deprecated_signed_revocations,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *SegmentsResponse) Reset() {
	*x = SegmentsResponse{}
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SegmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentsResponse) ProtoMessage() {}

func (x *SegmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentsResponse.ProtoReflect.Descriptor instead.
func (*SegmentsResponse) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{1}
}

func (x *SegmentsResponse) GetSegments() map[int32]*SegmentsResponse_Segments {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *SegmentsResponse) GetDeprecatedSignedRevocations() [][]byte {
	if x != nil {
		return x.DeprecatedSignedRevocations
	}
	return nil
}

type SegmentsRegistrationRequest struct {
	state         protoimpl.MessageState                          `protogen:"open.v1"`
	Segments      map[int32]*SegmentsRegistrationRequest_Segments `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SegmentsRegistrationRequest) Reset() {
	*x = SegmentsRegistrationRequest{}
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SegmentsRegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentsRegistrationRequest) ProtoMessage() {}

func (x *SegmentsRegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentsRegistrationRequest.ProtoReflect.Descriptor instead.
func (*SegmentsRegistrationRequest) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{2}
}

func (x *SegmentsRegistrationRequest) GetSegments() map[int32]*SegmentsRegistrationRequest_Segments {
	if x != nil {
		return x.Segments
	}
	return nil
}

type SegmentsRegistrationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SegmentsRegistrationResponse) Reset() {
	*x = SegmentsRegistrationResponse{}
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SegmentsRegistrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentsRegistrationResponse) ProtoMessage() {}

func (x *SegmentsRegistrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentsRegistrationResponse.ProtoReflect.Descriptor instead.
func (*SegmentsRegistrationResponse) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{3}
}

type BeaconRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Segment       *PathSegment           `protobuf:"bytes,1,opt,name=segment,proto3" json:"segment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BeaconRequest) Reset() {
	*x = BeaconRequest{}
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BeaconRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeaconRequest) ProtoMessage() {}

func (x *BeaconRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeaconRequest.ProtoReflect.Descriptor instead.
func (*BeaconRequest) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{4}
}

func (x *BeaconRequest) GetSegment() *PathSegment {
	if x != nil {
		return x.Segment
	}
	return nil
}

type BeaconResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BeaconResponse) Reset() {
	*x = BeaconResponse{}
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BeaconResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeaconResponse) ProtoMessage() {}

func (x *BeaconResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeaconResponse.ProtoReflect.Descriptor instead.
func (*BeaconResponse) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{5}
}

type PathSegment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SegmentInfo   []byte                 `protobuf:"bytes,1,opt,name=segment_info,json=segmentInfo,proto3" json:"segment_info,omitempty"`
	AsEntries     []*ASEntry             `protobuf:"bytes,2,rep,name=as_entries,json=asEntries,proto3" json:"as_entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PathSegment) Reset() {
	*x = PathSegment{}
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PathSegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathSegment) ProtoMessage() {}

func (x *PathSegment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathSegment.ProtoReflect.Descriptor instead.
func (*PathSegment) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{6}
}

func (x *PathSegment) GetSegmentInfo() []byte {
	if x != nil {
		return x.SegmentInfo
	}
	return nil
}

func (x *PathSegment) GetAsEntries() []*ASEntry {
	if x != nil {
		return x.AsEntries
	}
	return nil
}

type SegmentInformation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SegmentId     uint32                 `protobuf:"varint,2,opt,name=segment_id,json=segmentId,proto3" json:"segment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SegmentInformation) Reset() {
	*x = SegmentInformation{}
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SegmentInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentInformation) ProtoMessage() {}

func (x *SegmentInformation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentInformation.ProtoReflect.Descriptor instead.
func (*SegmentInformation) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{7}
}

func (x *SegmentInformation) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SegmentInformation) GetSegmentId() uint32 {
	if x != nil {
		return x.SegmentId
	}
	return 0
}

type ASEntry struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Signed        *crypto.SignedMessage          `protobuf:"bytes,1,opt,name=signed,proto3" json:"signed,omitempty"`
	Unsigned      *PathSegmentUnsignedExtensions `protobuf:"bytes,2,opt,name=unsigned,proto3" json:"unsigned,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ASEntry) Reset() {
	*x = ASEntry{}
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ASEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ASEntry) ProtoMessage() {}

func (x *ASEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ASEntry.ProtoReflect.Descriptor instead.
func (*ASEntry) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{8}
}

func (x *ASEntry) GetSigned() *crypto.SignedMessage {
	if x != nil {
		return x.Signed
	}
	return nil
}

func (x *ASEntry) GetUnsigned() *PathSegmentUnsignedExtensions {
	if x != nil {
		return x.Unsigned
	}
	return nil
}

type ASEntrySignedBody struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsdAs         uint64                 `protobuf:"varint,1,opt,name=isd_as,json=isdAs,proto3" json:"isd_as,omitempty"`
	NextIsdAs     uint64                 `protobuf:"varint,2,opt,name=next_isd_as,json=nextIsdAs,proto3" json:"next_isd_as,omitempty"`
	HopEntry      *HopEntry              `protobuf:"bytes,3,opt,name=hop_entry,json=hopEntry,proto3" json:"hop_entry,omitempty"`
	PeerEntries   []*PeerEntry           `protobuf:"bytes,4,rep,name=peer_entries,json=peerEntries,proto3" json:"peer_entries,omitempty"`
	Mtu           uint32                 `protobuf:"varint,5,opt,name=mtu,proto3" json:"mtu,omitempty"`
	Extensions    *PathSegmentExtensions `protobuf:"bytes,6,opt,name=extensions,proto3" json:"extensions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ASEntrySignedBody) Reset() {
	*x = ASEntrySignedBody{}
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ASEntrySignedBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ASEntrySignedBody) ProtoMessage() {}

func (x *ASEntrySignedBody) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ASEntrySignedBody.ProtoReflect.Descriptor instead.
func (*ASEntrySignedBody) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{9}
}

func (x *ASEntrySignedBody) GetIsdAs() uint64 {
	if x != nil {
		return x.IsdAs
	}
	return 0
}

func (x *ASEntrySignedBody) GetNextIsdAs() uint64 {
	if x != nil {
		return x.NextIsdAs
	}
	return 0
}

func (x *ASEntrySignedBody) GetHopEntry() *HopEntry {
	if x != nil {
		return x.HopEntry
	}
	return nil
}

func (x *ASEntrySignedBody) GetPeerEntries() []*PeerEntry {
	if x != nil {
		return x.PeerEntries
	}
	return nil
}

func (x *ASEntrySignedBody) GetMtu() uint32 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

func (x *ASEntrySignedBody) GetExtensions() *PathSegmentExtensions {
	if x != nil {
		return x.Extensions
	}
	return nil
}

type HopEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HopField      *HopField              `protobuf:"bytes,1,opt,name=hop_field,json=hopField,proto3" json:"hop_field,omitempty"`
	IngressMtu    uint32                 `protobuf:"varint,2,opt,name=ingress_mtu,json=ingressMtu,proto3" json:"ingress_mtu,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HopEntry) Reset() {
	*x = HopEntry{}
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HopEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HopEntry) ProtoMessage() {}

func (x *HopEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HopEntry.ProtoReflect.Descriptor instead.
func (*HopEntry) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{10}
}

func (x *HopEntry) GetHopField() *HopField {
	if x != nil {
		return x.HopField
	}
	return nil
}

func (x *HopEntry) GetIngressMtu() uint32 {
	if x != nil {
		return x.IngressMtu
	}
	return 0
}

type PeerEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PeerIsdAs     uint64                 `protobuf:"varint,1,opt,name=peer_isd_as,json=peerIsdAs,proto3" json:"peer_isd_as,omitempty"`
	PeerInterface uint64                 `protobuf:"varint,2,opt,name=peer_interface,json=peerInterface,proto3" json:"peer_interface,omitempty"`
	PeerMtu       uint32                 `protobuf:"varint,3,opt,name=peer_mtu,json=peerMtu,proto3" json:"peer_mtu,omitempty"`
	HopField      *HopField              `protobuf:"bytes,4,opt,name=hop_field,json=hopField,proto3" json:"hop_field,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeerEntry) Reset() {
	*x = PeerEntry{}
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerEntry) ProtoMessage() {}

func (x *PeerEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerEntry.ProtoReflect.Descriptor instead.
func (*PeerEntry) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{11}
}

func (x *PeerEntry) GetPeerIsdAs() uint64 {
	if x != nil {
		return x.PeerIsdAs
	}
	return 0
}

func (x *PeerEntry) GetPeerInterface() uint64 {
	if x != nil {
		return x.PeerInterface
	}
	return 0
}

func (x *PeerEntry) GetPeerMtu() uint32 {
	if x != nil {
		return x.PeerMtu
	}
	return 0
}

func (x *PeerEntry) GetHopField() *HopField {
	if x != nil {
		return x.HopField
	}
	return nil
}

type HopField struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ingress       uint64                 `protobuf:"varint,1,opt,name=ingress,proto3" json:"ingress,omitempty"`
	Egress        uint64                 `protobuf:"varint,2,opt,name=egress,proto3" json:"egress,omitempty"`
	ExpTime       uint32                 `protobuf:"varint,3,opt,name=exp_time,json=expTime,proto3" json:"exp_time,omitempty"`
	Mac           []byte                 `protobuf:"bytes,4,opt,name=mac,proto3" json:"mac,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HopField) Reset() {
	*x = HopField{}
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HopField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HopField) ProtoMessage() {}

func (x *HopField) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HopField.ProtoReflect.Descriptor instead.
func (*HopField) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{12}
}

func (x *HopField) GetIngress() uint64 {
	if x != nil {
		return x.Ingress
	}
	return 0
}

func (x *HopField) GetEgress() uint64 {
	if x != nil {
		return x.Egress
	}
	return 0
}

func (x *HopField) GetExpTime() uint32 {
	if x != nil {
		return x.ExpTime
	}
	return 0
}

func (x *HopField) GetMac() []byte {
	if x != nil {
		return x.Mac
	}
	return nil
}

type SegmentsResponse_Segments struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Segments      []*PathSegment         `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SegmentsResponse_Segments) Reset() {
	*x = SegmentsResponse_Segments{}
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SegmentsResponse_Segments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentsResponse_Segments) ProtoMessage() {}

func (x *SegmentsResponse_Segments) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentsResponse_Segments.ProtoReflect.Descriptor instead.
func (*SegmentsResponse_Segments) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{1, 0}
}

func (x *SegmentsResponse_Segments) GetSegments() []*PathSegment {
	if x != nil {
		return x.Segments
	}
	return nil
}

type SegmentsRegistrationRequest_Segments struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Segments      []*PathSegment         `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SegmentsRegistrationRequest_Segments) Reset() {
	*x = SegmentsRegistrationRequest_Segments{}
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SegmentsRegistrationRequest_Segments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentsRegistrationRequest_Segments) ProtoMessage() {}

func (x *SegmentsRegistrationRequest_Segments) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentsRegistrationRequest_Segments.ProtoReflect.Descriptor instead.
func (*SegmentsRegistrationRequest_Segments) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{2, 0}
}

func (x *SegmentsRegistrationRequest_Segments) GetSegments() []*PathSegment {
	if x != nil {
		return x.Segments
	}
	return nil
}

var File_proto_control_plane_v1_seg_proto protoreflect.FileDescriptor

const file_proto_control_plane_v1_seg_proto_rawDesc = "" +
	"\n" +
	" proto/control_plane/v1/seg.proto\x12\x16proto.control_plane.v1\x1a+proto/control_plane/v1/seg_extensions.proto\x1a\x1cproto/crypto/v1/signed.proto\"M\n" +
	"\x0fSegmentsRequest\x12\x1c\n" +
	"\n" +
	"src_isd_as\x18\x01 \x01(\x04R\bsrcIsdAs\x12\x1c\n" +
	"\n" +
	"dst_isd_as\x18\x02 \x01(\x04R\bdstIsdAs\"\xe8\x02\n" +
	"\x10SegmentsResponse\x12R\n" +
	"\bsegments\x18\x01 \x03(\v26.proto.control_plane.v1.SegmentsResponse.SegmentsEntryR\bsegments\x12C\n" +
	"\x1ddeprecated_signed_revocations\x18\xe8\a \x03(\fR\x1bdeprecatedSignedRevocations\x1aK\n" +
	"\bSegments\x12?\n" +
	"\bsegments\x18\x01 \x03(\v2#.proto.control_plane.v1.PathSegmentR\bsegments\x1an\n" +
	"\rSegmentsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12G\n" +
	"\x05value\x18\x02 \x01(\v21.proto.control_plane.v1.SegmentsResponse.SegmentsR\x05value:\x028\x01\"\xc4\x02\n" +
	"\x1bSegmentsRegistrationRequest\x12]\n" +
	"\bsegments\x18\x01 \x03(\v2A.proto.control_plane.v1.SegmentsRegistrationRequest.SegmentsEntryR\bsegments\x1aK\n" +
	"\bSegments\x12?\n" +
	"\bsegments\x18\x01 \x03(\v2#.proto.control_plane.v1.PathSegmentR\bsegments\x1ay\n" +
	"\rSegmentsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12R\n" +
	"\x05value\x18\x02 \x01(\v2<.proto.control_plane.v1.SegmentsRegistrationRequest.SegmentsR\x05value:\x028\x01\"\x1e\n" +
	"\x1cSegmentsRegistrationResponse\"N\n" +
	"\rBeaconRequest\x12=\n" +
	"\asegment\x18\x01 \x01(\v2#.proto.control_plane.v1.PathSegmentR\asegment\"\x10\n" +
	"\x0eBeaconResponse\"p\n" +
	"\vPathSegment\x12!\n" +
	"\fsegment_info\x18\x01 \x01(\fR\vsegmentInfo\x12>\n" +
	"\n" +
	"as_entries\x18\x02 \x03(\v2\x1f.proto.control_plane.v1.ASEntryR\tasEntries\"Q\n" +
	"\x12SegmentInformation\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x1d\n" +
	"\n" +
	"segment_id\x18\x02 \x01(\rR\tsegmentId\"\x94\x01\n" +
	"\aASEntry\x126\n" +
	"\x06signed\x18\x01 \x01(\v2\x1e.proto.crypto.v1.SignedMessageR\x06signed\x12Q\n" +
	"\bunsigned\x18\x02 \x01(\v25.proto.control_plane.v1.PathSegmentUnsignedExtensionsR\bunsigned\"\xb0\x02\n" +
	"\x11ASEntrySignedBody\x12\x15\n" +
	"\x06isd_as\x18\x01 \x01(\x04R\x05isdAs\x12\x1e\n" +
	"\vnext_isd_as\x18\x02 \x01(\x04R\tnextIsdAs\x12=\n" +
	"\thop_entry\x18\x03 \x01(\v2 .proto.control_plane.v1.HopEntryR\bhopEntry\x12D\n" +
	"\fpeer_entries\x18\x04 \x03(\v2!.proto.control_plane.v1.PeerEntryR\vpeerEntries\x12\x10\n" +
	"\x03mtu\x18\x05 \x01(\rR\x03mtu\x12M\n" +
	"\n" +
	"extensions\x18\x06 \x01(\v2-.proto.control_plane.v1.PathSegmentExtensionsR\n" +
	"extensions\"j\n" +
	"\bHopEntry\x12=\n" +
	"\thop_field\x18\x01 \x01(\v2 .proto.control_plane.v1.HopFieldR\bhopField\x12\x1f\n" +
	"\vingress_mtu\x18\x02 \x01(\rR\n" +
	"ingressMtu\"\xac\x01\n" +
	"\tPeerEntry\x12\x1e\n" +
	"\vpeer_isd_as\x18\x01 \x01(\x04R\tpeerIsdAs\x12%\n" +
	"\x0epeer_interface\x18\x02 \x01(\x04R\rpeerInterface\x12\x19\n" +
	"\bpeer_mtu\x18\x03 \x01(\rR\apeerMtu\x12=\n" +
	"\thop_field\x18\x04 \x01(\v2 .proto.control_plane.v1.HopFieldR\bhopField\"i\n" +
	"\bHopField\x12\x18\n" +
	"\aingress\x18\x01 \x01(\x04R\aingress\x12\x16\n" +
	"\x06egress\x18\x02 \x01(\x04R\x06egress\x12\x19\n" +
	"\bexp_time\x18\x03 \x01(\rR\aexpTime\x12\x10\n" +
	"\x03mac\x18\x04 \x01(\fR\x03mac*n\n" +
	"\vSegmentType\x12\x1c\n" +
	"\x18SEGMENT_TYPE_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fSEGMENT_TYPE_UP\x10\x01\x12\x15\n" +
	"\x11SEGMENT_TYPE_DOWN\x10\x02\x12\x15\n" +
	"\x11SEGMENT_TYPE_CORE\x10\x032w\n" +
	"\x14SegmentLookupService\x12_\n" +
	"\bSegments\x12'.proto.control_plane.v1.SegmentsRequest\x1a(.proto.control_plane.v1.SegmentsResponse\"\x002\xa2\x01\n" +
	"\x1aSegmentRegistrationService\x12\x83\x01\n" +
	"\x14SegmentsRegistration\x123.proto.control_plane.v1.SegmentsRegistrationRequest\x1a4.proto.control_plane.v1.SegmentsRegistrationResponse\"\x002s\n" +
	"\x16SegmentCreationService\x12Y\n" +
	"\x06Beacon\x12%.proto.control_plane.v1.BeaconRequest\x1a&.proto.control_plane.v1.BeaconResponse\"\x00B5Z3github.com/scionproto/scion/pkg/proto/control_planeb\x06proto3"

var (
	file_proto_control_plane_v1_seg_proto_rawDescOnce sync.Once
	file_proto_control_plane_v1_seg_proto_rawDescData []byte
)

func file_proto_control_plane_v1_seg_proto_rawDescGZIP() []byte {
	file_proto_control_plane_v1_seg_proto_rawDescOnce.Do(func() {
		file_proto_control_plane_v1_seg_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_control_plane_v1_seg_proto_rawDesc), len(file_proto_control_plane_v1_seg_proto_rawDesc)))
	})
	return file_proto_control_plane_v1_seg_proto_rawDescData
}

var file_proto_control_plane_v1_seg_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_control_plane_v1_seg_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_proto_control_plane_v1_seg_proto_goTypes = []any{
	(SegmentType)(0),                             // 0: proto.control_plane.v1.SegmentType
	(*SegmentsRequest)(nil),                      // 1: proto.control_plane.v1.SegmentsRequest
	(*SegmentsResponse)(nil),                     // 2: proto.control_plane.v1.SegmentsResponse
	(*SegmentsRegistrationRequest)(nil),          // 3: proto.control_plane.v1.SegmentsRegistrationRequest
	(*SegmentsRegistrationResponse)(nil),         // 4: proto.control_plane.v1.SegmentsRegistrationResponse
	(*BeaconRequest)(nil),                        // 5: proto.control_plane.v1.BeaconRequest
	(*BeaconResponse)(nil),                       // 6: proto.control_plane.v1.BeaconResponse
	(*PathSegment)(nil),                          // 7: proto.control_plane.v1.PathSegment
	(*SegmentInformation)(nil),                   // 8: proto.control_plane.v1.SegmentInformation
	(*ASEntry)(nil),                              // 9: proto.control_plane.v1.ASEntry
	(*ASEntrySignedBody)(nil),                    // 10: proto.control_plane.v1.ASEntrySignedBody
	(*HopEntry)(nil),                             // 11: proto.control_plane.v1.HopEntry
	(*PeerEntry)(nil),                            // 12: proto.control_plane.v1.PeerEntry
	(*HopField)(nil),                             // 13: proto.control_plane.v1.HopField
	(*SegmentsResponse_Segments)(nil),            // 14: proto.control_plane.v1.SegmentsResponse.Segments
	nil,                                          // 15: proto.control_plane.v1.SegmentsResponse.SegmentsEntry
	(*SegmentsRegistrationRequest_Segments)(nil), // 16: proto.control_plane.v1.SegmentsRegistrationRequest.Segments
	nil,                                   // 17: proto.control_plane.v1.SegmentsRegistrationRequest.SegmentsEntry
	(*crypto.SignedMessage)(nil),          // 18: proto.crypto.v1.SignedMessage
	(*PathSegmentUnsignedExtensions)(nil), // 19: proto.control_plane.v1.PathSegmentUnsignedExtensions
	(*PathSegmentExtensions)(nil),         // 20: proto.control_plane.v1.PathSegmentExtensions
}
var file_proto_control_plane_v1_seg_proto_depIdxs = []int32{
	15, // 0: proto.control_plane.v1.SegmentsResponse.segments:type_name -> proto.control_plane.v1.SegmentsResponse.SegmentsEntry
	17, // 1: proto.control_plane.v1.SegmentsRegistrationRequest.segments:type_name -> proto.control_plane.v1.SegmentsRegistrationRequest.SegmentsEntry
	7,  // 2: proto.control_plane.v1.BeaconRequest.segment:type_name -> proto.control_plane.v1.PathSegment
	9,  // 3: proto.control_plane.v1.PathSegment.as_entries:type_name -> proto.control_plane.v1.ASEntry
	18, // 4: proto.control_plane.v1.ASEntry.signed:type_name -> proto.crypto.v1.SignedMessage
	19, // 5: proto.control_plane.v1.ASEntry.unsigned:type_name -> proto.control_plane.v1.PathSegmentUnsignedExtensions
	11, // 6: proto.control_plane.v1.ASEntrySignedBody.hop_entry:type_name -> proto.control_plane.v1.HopEntry
	12, // 7: proto.control_plane.v1.ASEntrySignedBody.peer_entries:type_name -> proto.control_plane.v1.PeerEntry
	20, // 8: proto.control_plane.v1.ASEntrySignedBody.extensions:type_name -> proto.control_plane.v1.PathSegmentExtensions
	13, // 9: proto.control_plane.v1.HopEntry.hop_field:type_name -> proto.control_plane.v1.HopField
	13, // 10: proto.control_plane.v1.PeerEntry.hop_field:type_name -> proto.control_plane.v1.HopField
	7,  // 11: proto.control_plane.v1.SegmentsResponse.Segments.segments:type_name -> proto.control_plane.v1.PathSegment
	14, // 12: proto.control_plane.v1.SegmentsResponse.SegmentsEntry.value:type_name -> proto.control_plane.v1.SegmentsResponse.Segments
	7,  // 13: proto.control_plane.v1.SegmentsRegistrationRequest.Segments.segments:type_name -> proto.control_plane.v1.PathSegment
	16, // 14: proto.control_plane.v1.SegmentsRegistrationRequest.SegmentsEntry.value:type_name -> proto.control_plane.v1.SegmentsRegistrationRequest.Segments
	1,  // 15: proto.control_plane.v1.SegmentLookupService.Segments:input_type -> proto.control_plane.v1.SegmentsRequest
	3,  // 16: proto.control_plane.v1.SegmentRegistrationService.SegmentsRegistration:input_type -> proto.control_plane.v1.SegmentsRegistrationRequest
	5,  // 17: proto.control_plane.v1.SegmentCreationService.Beacon:input_type -> proto.control_plane.v1.BeaconRequest
	2,  // 18: proto.control_plane.v1.SegmentLookupService.Segments:output_type -> proto.control_plane.v1.SegmentsResponse
	4,  // 19: proto.control_plane.v1.SegmentRegistrationService.SegmentsRegistration:output_type -> proto.control_plane.v1.SegmentsRegistrationResponse
	6,  // 20: proto.control_plane.v1.SegmentCreationService.Beacon:output_type -> proto.control_plane.v1.BeaconResponse
	18, // [18:21] is the sub-list for method output_type
	15, // [15:18] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_proto_control_plane_v1_seg_proto_init() }
func file_proto_control_plane_v1_seg_proto_init() {
	if File_proto_control_plane_v1_seg_proto != nil {
		return
	}
	file_proto_control_plane_v1_seg_extensions_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_control_plane_v1_seg_proto_rawDesc), len(file_proto_control_plane_v1_seg_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_proto_control_plane_v1_seg_proto_goTypes,
		DependencyIndexes: file_proto_control_plane_v1_seg_proto_depIdxs,
		EnumInfos:         file_proto_control_plane_v1_seg_proto_enumTypes,
		MessageInfos:      file_proto_control_plane_v1_seg_proto_msgTypes,
	}.Build()
	File_proto_control_plane_v1_seg_proto = out.File
	file_proto_control_plane_v1_seg_proto_goTypes = nil
	file_proto_control_plane_v1_seg_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SegmentLookupServiceClient is the client API for SegmentLookupService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SegmentLookupServiceClient interface {
	Segments(ctx context.Context, in *SegmentsRequest, opts ...grpc.CallOption) (*SegmentsResponse, error)
}

type segmentLookupServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSegmentLookupServiceClient(cc grpc.ClientConnInterface) SegmentLookupServiceClient {
	return &segmentLookupServiceClient{cc}
}

func (c *segmentLookupServiceClient) Segments(ctx context.Context, in *SegmentsRequest, opts ...grpc.CallOption) (*SegmentsResponse, error) {
	out := new(SegmentsResponse)
	err := c.cc.Invoke(ctx, "/proto.control_plane.v1.SegmentLookupService/Segments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SegmentLookupServiceServer is the server API for SegmentLookupService service.
type SegmentLookupServiceServer interface {
	Segments(context.Context, *SegmentsRequest) (*SegmentsResponse, error)
}

// UnimplementedSegmentLookupServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSegmentLookupServiceServer struct {
}

func (*UnimplementedSegmentLookupServiceServer) Segments(context.Context, *SegmentsRequest) (*SegmentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Segments not implemented")
}

func RegisterSegmentLookupServiceServer(s *grpc.Server, srv SegmentLookupServiceServer) {
	s.RegisterService(&_SegmentLookupService_serviceDesc, srv)
}

func _SegmentLookupService_Segments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SegmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SegmentLookupServiceServer).Segments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.control_plane.v1.SegmentLookupService/Segments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SegmentLookupServiceServer).Segments(ctx, req.(*SegmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SegmentLookupService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.control_plane.v1.SegmentLookupService",
	HandlerType: (*SegmentLookupServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Segments",
			Handler:    _SegmentLookupService_Segments_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/control_plane/v1/seg.proto",
}

// SegmentRegistrationServiceClient is the client API for SegmentRegistrationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SegmentRegistrationServiceClient interface {
	SegmentsRegistration(ctx context.Context, in *SegmentsRegistrationRequest, opts ...grpc.CallOption) (*SegmentsRegistrationResponse, error)
}

type segmentRegistrationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSegmentRegistrationServiceClient(cc grpc.ClientConnInterface) SegmentRegistrationServiceClient {
	return &segmentRegistrationServiceClient{cc}
}

func (c *segmentRegistrationServiceClient) SegmentsRegistration(ctx context.Context, in *SegmentsRegistrationRequest, opts ...grpc.CallOption) (*SegmentsRegistrationResponse, error) {
	out := new(SegmentsRegistrationResponse)
	err := c.cc.Invoke(ctx, "/proto.control_plane.v1.SegmentRegistrationService/SegmentsRegistration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SegmentRegistrationServiceServer is the server API for SegmentRegistrationService service.
type SegmentRegistrationServiceServer interface {
	SegmentsRegistration(context.Context, *SegmentsRegistrationRequest) (*SegmentsRegistrationResponse, error)
}

// UnimplementedSegmentRegistrationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSegmentRegistrationServiceServer struct {
}

func (*UnimplementedSegmentRegistrationServiceServer) SegmentsRegistration(context.Context, *SegmentsRegistrationRequest) (*SegmentsRegistrationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SegmentsRegistration not implemented")
}

func RegisterSegmentRegistrationServiceServer(s *grpc.Server, srv SegmentRegistrationServiceServer) {
	s.RegisterService(&_SegmentRegistrationService_serviceDesc, srv)
}

func _SegmentRegistrationService_SegmentsRegistration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SegmentsRegistrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SegmentRegistrationServiceServer).SegmentsRegistration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.control_plane.v1.SegmentRegistrationService/SegmentsRegistration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SegmentRegistrationServiceServer).SegmentsRegistration(ctx, req.(*SegmentsRegistrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SegmentRegistrationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.control_plane.v1.SegmentRegistrationService",
	HandlerType: (*SegmentRegistrationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SegmentsRegistration",
			Handler:    _SegmentRegistrationService_SegmentsRegistration_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/control_plane/v1/seg.proto",
}

// SegmentCreationServiceClient is the client API for SegmentCreationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SegmentCreationServiceClient interface {
	Beacon(ctx context.Context, in *BeaconRequest, opts ...grpc.CallOption) (*BeaconResponse, error)
}

type segmentCreationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSegmentCreationServiceClient(cc grpc.ClientConnInterface) SegmentCreationServiceClient {
	return &segmentCreationServiceClient{cc}
}

func (c *segmentCreationServiceClient) Beacon(ctx context.Context, in *BeaconRequest, opts ...grpc.CallOption) (*BeaconResponse, error) {
	out := new(BeaconResponse)
	err := c.cc.Invoke(ctx, "/proto.control_plane.v1.SegmentCreationService/Beacon", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SegmentCreationServiceServer is the server API for SegmentCreationService service.
type SegmentCreationServiceServer interface {
	Beacon(context.Context, *BeaconRequest) (*BeaconResponse, error)
}

// UnimplementedSegmentCreationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSegmentCreationServiceServer struct {
}

func (*UnimplementedSegmentCreationServiceServer) Beacon(context.Context, *BeaconRequest) (*BeaconResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Beacon not implemented")
}

func RegisterSegmentCreationServiceServer(s *grpc.Server, srv SegmentCreationServiceServer) {
	s.RegisterService(&_SegmentCreationService_serviceDesc, srv)
}

func _SegmentCreationService_Beacon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BeaconRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SegmentCreationServiceServer).Beacon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.control_plane.v1.SegmentCreationService/Beacon",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SegmentCreationServiceServer).Beacon(ctx, req.(*BeaconRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SegmentCreationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.control_plane.v1.SegmentCreationService",
	HandlerType: (*SegmentCreationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Beacon",
			Handler:    _SegmentCreationService_Beacon_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/control_plane/v1/seg.proto",
}
