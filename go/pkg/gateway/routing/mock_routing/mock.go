// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/scionproto/scion/go/pkg/gateway/routing (interfaces: PolicyPublisher)

// Package mock_routing is a generated GoMock package.
package mock_routing

import (
	gomock "github.com/golang/mock/gomock"
	routing "github.com/scionproto/scion/go/pkg/gateway/routing"
	reflect "reflect"
)

// MockPolicyPublisher is a mock of PolicyPublisher interface
type MockPolicyPublisher struct {
	ctrl     *gomock.Controller
	recorder *MockPolicyPublisherMockRecorder
}

// MockPolicyPublisherMockRecorder is the mock recorder for MockPolicyPublisher
type MockPolicyPublisherMockRecorder struct {
	mock *MockPolicyPublisher
}

// NewMockPolicyPublisher creates a new mock instance
func NewMockPolicyPublisher(ctrl *gomock.Controller) *MockPolicyPublisher {
	mock := &MockPolicyPublisher{ctrl: ctrl}
	mock.recorder = &MockPolicyPublisherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPolicyPublisher) EXPECT() *MockPolicyPublisherMockRecorder {
	return m.recorder
}

// PublishRoutingPolicy mocks base method
func (m *MockPolicyPublisher) PublishRoutingPolicy(arg0 *routing.Policy) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "PublishRoutingPolicy", arg0)
}

// PublishRoutingPolicy indicates an expected call of PublishRoutingPolicy
func (mr *MockPolicyPublisherMockRecorder) PublishRoutingPolicy(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PublishRoutingPolicy", reflect.TypeOf((*MockPolicyPublisher)(nil).PublishRoutingPolicy), arg0)
}

// RoutingPolicy mocks base method
func (m *MockPolicyPublisher) RoutingPolicy() *routing.Policy {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RoutingPolicy")
	ret0, _ := ret[0].(*routing.Policy)
	return ret0
}

// RoutingPolicy indicates an expected call of RoutingPolicy
func (mr *MockPolicyPublisherMockRecorder) RoutingPolicy() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RoutingPolicy", reflect.TypeOf((*MockPolicyPublisher)(nil).RoutingPolicy))
}
