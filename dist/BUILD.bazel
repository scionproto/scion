load(":package.bzl", "scion_pkg_deb")
load(":package.bzl", "scion_pkg_ipk")
load(":platform.bzl", "multiplatform_filegroup")
load(":platform.bzl", "DEFAULT_DEB_PLATFORMS")
load(":platform.bzl", "DEFAULT_OPENWRT_PLATFORMS")
load(":git_version.bzl", "git_version")

git_version(
    name = "git_version",
    tags = ["manual"],
    visibility = ["@openwrt_x86_64_SDK//:__subpackages__"],
)

scion_pkg_deb(
    name = "router_deb",
    depends = [
        "adduser",
    ],
    description = "SCION inter-domain network architecture border router",
    executables = {
        "//router/cmd/router:router": "scion-router",
    },
    package = "scion-router",
    postinst = "debian/scion.postinst",
    systemds = ["systemd/scion-router@.service"],
    version_file = ":git_version",
)

scion_pkg_deb(
    name = "control_deb",
    configs = [],
    depends = [
        "adduser",
        "scion-dispatcher",
    ],
    description = "SCION inter-domain network architecture control service",
    executables = {
        "//control/cmd/control:control": "scion-control",
    },
    package = "scion-control",
    systemds = ["systemd/scion-control@.service"],
    version_file = ":git_version",
)

scion_pkg_deb(
    name = "dispatcher_deb",
    configs = ["conffiles/dispatcher.toml"],
    depends = [
        "adduser",
    ],
    description = "SCION dispatcher",
    executables = {
        "//dispatcher/cmd/dispatcher:dispatcher": "scion-dispatcher",
    },
    package = "scion-dispatcher",
    postinst = "debian/scion.postinst",
    systemds = ["systemd/scion-dispatcher.service"],
    version_file = ":git_version",
)

scion_pkg_deb(
    name = "daemon_deb",
    configs = ["conffiles/sciond.toml"],
    depends = [
        "adduser",
    ],
    description = "SCION daemon",
    executables = {
        "//daemon/cmd/daemon:daemon": "scion-daemon",
    },
    package = "scion-daemon",
    postinst = "debian/scion.postinst",
    systemds = ["systemd/scion-daemon.service"],
    version_file = ":git_version",
)

scion_pkg_deb(
    name = "gateway_deb",
    configs = [
        "conffiles/sig.json",
        "conffiles/sig.toml",
    ],
    depends = [
        "adduser",
        "scion-dispatcher",
        "scion-daemon",
    ],
    description = "SCION-IP Gateway",
    executables = {
        "//gateway/cmd/gateway:gateway": "scion-ip-gateway",
    },
    package = "scion-ip-gateway",
    systemds = ["systemd/scion-ip-gateway.service"],
    version_file = ":git_version",
)

scion_pkg_deb(
    name = "tools_deb",
    depends = [
        "adduser",
        "scion-dispatcher",
        "scion-daemon",
    ],
    description = "SCION tools",
    executables = {
        "//scion/cmd/scion:scion": "scion",
        "//scion-pki/cmd/scion-pki:scion-pki": "scion-pki",
    },
    package = "scion-tools",
    version_file = ":git_version",
)

multiplatform_filegroup(
    name = "deb",
    srcs = [
        "control_deb",
        "daemon_deb",
        "dispatcher_deb",
        "gateway_deb",
        "router_deb",
        "tools_deb",
    ],
    target_platforms = DEFAULT_DEB_PLATFORMS,
    visibility = ["//dist:__subpackages__"],
)

scion_pkg_ipk(
    name = "common_ipk",
    package = "scion-common",
)

scion_pkg_ipk(
    name = "router_ipk",
    package = "scion-router",
)

scion_pkg_ipk(
    name = "gateway_ipk",
    package = "scion-gateway",
)

scion_pkg_ipk(
    name = "control_ipk",
    package = "scion-control",
)

scion_pkg_ipk(
    name = "dispatcher_ipk",
    package = "scion-dispatcher",
)

scion_pkg_ipk(
    name = "daemon_ipk",
    package = "scion-daemon",
)

scion_pkg_ipk(
    name = "tools_ipk",
    package = "scion-tools",
)

scion_pkg_ipk(
    name = "coremark_ipk",
    package = "scion-coremark",
)

# multiplatform_filegroup creates two targets: <name> and <name>_all.
# <name> means "local platform".
# So "build //dist/openwrt" means "make me ipk packages for the local platform only. It wont work,
# unles you happen to be building on an openwrt system (really?).
# What you really want is "build //dist/openwrt_all".
multiplatform_filegroup(
    name = "openwrt",
    srcs = [
        "common_ipk",
        "control_ipk",
        "daemon_ipk",
        "dispatcher_ipk",
        "gateway_ipk",
        "router_ipk",
        "tools_ipk",
    ],
    target_platforms = DEFAULT_OPENWRT_PLATFORMS,
    visibility = ["//dist:__subpackages__"],
)

multiplatform_filegroup(
    name = "openwrt_testing",
    srcs = [
        "coremark_ipk",
    ],
    target_platforms = DEFAULT_OPENWRT_PLATFORMS,
    visibility = ["//dist:__subpackages__"],
)
