load("@io_bazel_rules_docker//container:container.bzl", "container_image")
load("@io_bazel_rules_go//go:def.bzl", "go_test")

go_test(
    name = "go_default_test",
    srcs = ["reload_test.go"],
    data = [
        "docker-compose.yml",
        "testdata/topology_reload.json",
        ":cs.tar",
        ":dispatcher.tar",
        ":invalid_changed_ip",
        ":invalid_changed_port",
        "//acceptance/topo_common:invalid_reloads",
        "//acceptance/topo_common:topology",
    ],
    deps = [
        "//go/lib/topology:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
    ],
)

container_image(
    name = "dispatcher",
    base = "//docker:dispatcher_debug",
    entrypoint = [
        "/app/dispatcher",
        "-config",
        "/disp.toml",
    ],
    files = ["testdata/disp.toml"],
)

container_image(
    name = "cs",
    base = "//docker:cs_debug",
    entrypoint = [
        "/app/cs",
        "-config",
        "/cs.toml",
    ],
    files = [
        "testdata/cs.toml",
        "testdata/topology_reload.json",
        ":invalid_changed_ip",
        ":invalid_changed_port",
        "//acceptance/topo_common:invalid_reloads",
        "//acceptance/topo_common:topology",
    ],
    tars = [":gen_crypto_tar"],
)

genrule(
    name = "invalid_changed_ip",
    srcs = ["//acceptance/topo_common:topology"],
    outs = ["topology_invalid_changed_ip.json"],
    cmd = "jq '.control_service[].addr = \"242.42.42.2:31002\"' $(location //acceptance/topo_common:topology) > $@",
)

genrule(
    name = "invalid_changed_port",
    srcs = ["//acceptance/topo_common:topology"],
    outs = ["topology_invalid_changed_port.json"],
    cmd = "jq '.control_service[].addr = \"127.0.0.12:42424\"' $(location //acceptance/topo_common:topology) > $@",
)

genrule(
    name = "gen_crypto_tar",
    srcs = ["testdata/test.topo"],
    outs = [
        "crypto.tar",
    ],
    cmd = "$(location :testdata/gen_crypto.sh) $(location //go/tools/scion-pki:scion-pki) $@ $(location testdata/test.topo)",
    tools = [
        ":testdata/gen_crypto.sh",
        "//go/tools/scion-pki",
    ],
)
