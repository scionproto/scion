#!/bin/sh

# Bazel makes dynamic target names supposedly impossible because the inputs to the names must be
# generated before analysis starts. Well... we can do just that: this runs before the real bazel.
# So, you can "load(versioning.bzl)" and use its constants to make versioned target names.

ROOTDIR=$(dirname "$0")/..

# When building inside a docker container GIT_VERSION is set by the creator of the container.
# When building locally, use the version reported by git.
VERSION=${GIT_VERSION:-$($ROOTDIR/tools/git-version)}
VERSION_NO_V=$(echo $VERSION | sed -n 's/^v//p')

echo "# Generated by bazel-build-env. Do check explanation there." > $ROOTDIR/versioning.bzl
echo "STABLE_GIT_VERSION = \"$VERSION\"" >> $ROOTDIR/versioning.bzl
echo "STRIPPED_GIT_VERSION = \"$VERSION_NO_V\"" >> $ROOTDIR/versioning.bzl

# Put this script out the way for recursive invocations
# Bazelisk does this too and if we don't, some parts of the build fail mysteriously.
PATH=$(dirname "${BAZEL_REAL}"):$PATH

# We've done our part.
exec "${BAZEL_REAL}" "$@"
