load("//tools/lint:go.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "doc.go",
        "error.go",
        "interface.go",
        "linktype.go",
        "raw.go",
        "reload.go",
        "servicetype.go",
        "topology.go",
        "validator.go",
    ],
    importpath = "github.com/scionproto/scion/private/topology",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/addr:go_default_library",
        "//pkg/log:go_default_library",
        "//pkg/metrics:go_default_library",
        "//pkg/private/common:go_default_library",
        "//pkg/private/serrors:go_default_library",
        "//private/topology/json:go_default_library",
        "//private/topology/underlay:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "export_test.go",
        "interface_test.go",
        "reload_test.go",
        "servicetype_test.go",
        "topology_test.go",
        "types_test.go",
        "validator_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":go_default_library"],
    deps = [
        "//pkg/addr:go_default_library",
        "//pkg/metrics/mock_metrics:go_default_library",
        "//pkg/private/common:go_default_library",
        "//pkg/private/ctrl/path_mgmt/proto:go_default_library",
        "//pkg/private/xtest:go_default_library",
        "//private/topology/json:go_default_library",
        "//private/topology/mock_topology:go_default_library",
        "//private/topology/underlay:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
        "@org_golang_x_net//context:go_default_library",
        "@org_golang_x_sync//errgroup:go_default_library",
    ],
)
