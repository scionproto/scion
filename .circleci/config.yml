version: 2

workflows:
    version: 2
    scion_build_test:
        jobs:
            - build
    scion_publish:
        jobs:
            - publish:
                filters:
                    tags:
                        only: /^v.*/
                    branches:
                        ignore: /.*/

jobs:
    build:
        machine: true
        steps:
            # Setup
            - checkout
            - run:
                name: Update docker
                command: ./tools/ci/docker_update
            - run:
                name: Pull and tag scion_base image
                command: ./tools/ci/prepare_image 3e44fd367a50d6d46fc9208850fe0a2149c98fc0b54b5c77d94e9b6994783070
                when: always
            - run:
                name: Build scion:latest image
                command: ./docker.sh build
                when: always
            # - run:
            #     name: Build app images
            #     command: make -C docker/perapp

            # Build and run tests:
            - run:
                name: Create and start container
                command: ./tools/ci/setup_container
                when: always
            - run:
                name: Build
                command: ./tools/ci/build
                when: always
            - run:
                name: Lint
                command: ./tools/ci/lint
                when: always
            - run:
                name: Unit tests
                command: ./tools/ci/unittest
                when: always
            - run:
                name: Python documentation (sphinx)
                command: ./tools/ci/sphinx
                when: always
            - run:
                name: Integration tests
                command: ./tools/ci/integration
                when: always

            # Clean up
            - run:
                name: Gather logs and stop container
                command: |
                    set +e -x
                    TARGET="${CIRCLE_PR_NUMBER:-$CIRCLE_BRANCH}"
                    TARGET="${TARGET//\//_}"
                    BUILD=$(date +%s)
                    [ -n "$CIRCLE_BUILD_NUM" ] && BUILD="build${CIRCLE_BUILD_NUM}"
                    ARTIFACTS="circleci.${CIRCLE_PROJECT_USERNAME}.${CIRCLE_PROJECT_REPONAME}.${TARGET}.${BUILD}"
                    mkdir -p "/tmp/artifacts/$ARTIFACTS" "/tmp/artifacts.out"
                    ./tools/ci/clean_up /tmp/artifacts/$ARTIFACTS
                    tar caf "/tmp/artifacts.out/$ARTIFACTS.tar.gz" -C /tmp/artifacts "$ARTIFACTS"
                when: always
            - store_artifacts:
                path: /tmp/artifacts.out
                destination: /

    publish:
        machine: true
        steps:
            - checkout
            - run:
                name: Update docker
                command: ./tools/ci/docker_update
            - run:
                name: Build base
                command: ./docker.sh base
            - run:
                name: Build image
                command: ./docker.sh build
            - run:
                name: Build app images
                command: make -C docker/perapp
            - run:
                name: Docker login
                command: docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
            - run:
                name: Push images
                command: ./docker/perapp/publish "$CIRCLE_TAG"

# vim: expandtab:sw=4:sts=4
