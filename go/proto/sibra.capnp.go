// Code generated by capnpc-go. DO NOT EDIT.

package proto

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type SibraPCBExt struct{ capnp.Struct }

// SibraPCBExt_TypeID is the unique identifier for the type SibraPCBExt.
const SibraPCBExt_TypeID = 0xb8fde9b959e9608d

func NewSibraPCBExt(s *capnp.Segment) (SibraPCBExt, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return SibraPCBExt{st}, err
}

func NewRootSibraPCBExt(s *capnp.Segment) (SibraPCBExt, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return SibraPCBExt{st}, err
}

func ReadRootSibraPCBExt(msg *capnp.Message) (SibraPCBExt, error) {
	root, err := msg.RootPtr()
	return SibraPCBExt{root.Struct()}, err
}

func (s SibraPCBExt) String() string {
	str, _ := text.Marshal(0xb8fde9b959e9608d, s.Struct)
	return str
}

func (s SibraPCBExt) Id() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s SibraPCBExt) HasId() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s SibraPCBExt) SetId(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s SibraPCBExt) Info() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s SibraPCBExt) HasInfo() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s SibraPCBExt) SetInfo(v []byte) error {
	return s.Struct.SetData(1, v)
}

func (s SibraPCBExt) Up() bool {
	return s.Struct.Bit(0)
}

func (s SibraPCBExt) SetUp(v bool) {
	s.Struct.SetBit(0, v)
}

func (s SibraPCBExt) Sofs() (capnp.DataList, error) {
	p, err := s.Struct.Ptr(2)
	return capnp.DataList{List: p.List()}, err
}

func (s SibraPCBExt) HasSofs() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s SibraPCBExt) SetSofs(v capnp.DataList) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewSofs sets the sofs field to a newly
// allocated capnp.DataList, preferring placement in s's segment.
func (s SibraPCBExt) NewSofs(n int32) (capnp.DataList, error) {
	l, err := capnp.NewDataList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.DataList{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

// SibraPCBExt_List is a list of SibraPCBExt.
type SibraPCBExt_List struct{ capnp.List }

// NewSibraPCBExt creates a new list of SibraPCBExt.
func NewSibraPCBExt_List(s *capnp.Segment, sz int32) (SibraPCBExt_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return SibraPCBExt_List{l}, err
}

func (s SibraPCBExt_List) At(i int) SibraPCBExt { return SibraPCBExt{s.List.Struct(i)} }

func (s SibraPCBExt_List) Set(i int, v SibraPCBExt) error { return s.List.SetStruct(i, v.Struct) }

func (s SibraPCBExt_List) String() string {
	str, _ := text.MarshalList(0xb8fde9b959e9608d, s.List)
	return str
}

// SibraPCBExt_Promise is a wrapper for a SibraPCBExt promised by a client call.
type SibraPCBExt_Promise struct{ *capnp.Pipeline }

func (p SibraPCBExt_Promise) Struct() (SibraPCBExt, error) {
	s, err := p.Pipeline.Struct()
	return SibraPCBExt{s}, err
}

type SibraPayload struct{ capnp.Struct }

// SibraPayload_TypeID is the unique identifier for the type SibraPayload.
const SibraPayload_TypeID = 0xf231c8f55f84c390

func NewSibraPayload(s *capnp.Segment) (SibraPayload, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SibraPayload{st}, err
}

func NewRootSibraPayload(s *capnp.Segment) (SibraPayload, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SibraPayload{st}, err
}

func ReadRootSibraPayload(msg *capnp.Message) (SibraPayload, error) {
	root, err := msg.RootPtr()
	return SibraPayload{root.Struct()}, err
}

func (s SibraPayload) String() string {
	str, _ := text.Marshal(0xf231c8f55f84c390, s.Struct)
	return str
}

// SibraPayload_List is a list of SibraPayload.
type SibraPayload_List struct{ capnp.List }

// NewSibraPayload creates a new list of SibraPayload.
func NewSibraPayload_List(s *capnp.Segment, sz int32) (SibraPayload_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SibraPayload_List{l}, err
}

func (s SibraPayload_List) At(i int) SibraPayload { return SibraPayload{s.List.Struct(i)} }

func (s SibraPayload_List) Set(i int, v SibraPayload) error { return s.List.SetStruct(i, v.Struct) }

func (s SibraPayload_List) String() string {
	str, _ := text.MarshalList(0xf231c8f55f84c390, s.List)
	return str
}

// SibraPayload_Promise is a wrapper for a SibraPayload promised by a client call.
type SibraPayload_Promise struct{ *capnp.Pipeline }

func (p SibraPayload_Promise) Struct() (SibraPayload, error) {
	s, err := p.Pipeline.Struct()
	return SibraPayload{s}, err
}

const schema_d7ac72be29310d11 = "x\xdal\xce\xbfJ\xc3`\x14\x05\xf0s\xeeM\xed\xd2" +
	"\xb4~M&W'\x1d\xc4\xacN\xa2\xb8\xe7\xa3\x93 " +
	"\xd8hZ\x1a\xa8Mh\x14t\xef*\xf8\x08>\x80\x8b" +
	"\x9b\x0e:(\xf8\x0f\x1c\x9c|\x04\xe9*8J\xe4\x13" +
	"\x05\x07\xb9\xcb=\xf7\xfe\x86\xb3|\xe7\xadJT\xbb\x9f" +
	"\x07:\xa7\xac\xcdT\xc7\xdd\xe9\xe6\xe5\xf4\xf3\x02\xb6A" +
	"V\xc6\x8f\x16\xae\xc7g\xaf\xa8i\x1d\x08\x1e\xcdM\xf0" +
	"b\xdc\xf6l\xde\xc0\xea\xe4v\xb2\xfd\xf1\x10\xbd\xc34" +
	"\xfeX\xcf\x81\xf3\xf6Sp\xd5\xae\xa3\xfa\x99^Uf" +
	";\xe3di7\x91bT\xact\\\x88\xd7\xd76\x0e" +
	"\xf7\x11\x93vV=\xc0#`\x929\xc0n)\xed@" +
	"h\xc8\x90\xee\xd8[\x04lWi\x87BJH\x01L" +
	"\xe6`\xaa\xb4\x85\xd0\xa8\x84T\xc0\xec98P\xda\x89" +
	"P\xb3\x94>\x84>\xd8\xcaF\xfd\xfc7\xe8AAB" +
	"H\xb0U\xe6\xfd\x92M0V~\xbf\x9b\xe0\x7fE\x93" +
	"\xa3a\x9e\xa4pU\xbf\x02\x00\x00\xff\xff\xcd\xb9G\xfd"

func init() {
	schemas.Register(schema_d7ac72be29310d11,
		0xb8fde9b959e9608d,
		0xf231c8f55f84c390)
}
