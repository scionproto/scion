load("//tools/lint:go.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "doc.go",
        "fetcher.go",
        "metrics.go",
        "pather.go",
        "request.go",
        "requester.go",
        "resolver.go",
        "segs.go",
        "splitter.go",
    ],
    importpath = "github.com/scionproto/scion/private/segment/segfetcher",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/addr:go_default_library",
        "//pkg/log:go_default_library",
        "//pkg/private/prom:go_default_library",
        "//pkg/private/serrors:go_default_library",
        "//pkg/segment:go_default_library",
        "//pkg/slayers/path:go_default_library",
        "//pkg/snet:go_default_library",
        "//pkg/snet/path:go_default_library",
        "//private/path/combinator:go_default_library",
        "//private/pathdb:go_default_library",
        "//private/pathdb/query:go_default_library",
        "//private/revcache:go_default_library",
        "//private/segment/segfetcher/internal/metrics:go_default_library",
        "//private/segment/seghandler:go_default_library",
        "//private/tracing:go_default_library",
        "//private/trust:go_default_library",
        "@com_github_opentracing_opentracing_go//:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "export_test.go",
        "fetcher_test.go",
        "pather_test.go",
        "requester_test.go",
        "resolver_test.go",
        "splitter_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//pkg/addr:go_default_library",
        "//pkg/private/common:go_default_library",
        "//pkg/private/ctrl/path_mgmt:go_default_library",
        "//pkg/private/serrors:go_default_library",
        "//pkg/private/xtest:go_default_library",
        "//pkg/private/xtest/graph:go_default_library",
        "//pkg/private/xtest/matchers:go_default_library",
        "//pkg/segment:go_default_library",
        "//pkg/snet:go_default_library",
        "//private/pathdb/mock_pathdb:go_default_library",
        "//private/pathdb/query:go_default_library",
        "//private/revcache:go_default_library",
        "//private/revcache/mock_revcache:go_default_library",
        "//private/segment/segfetcher/mock_segfetcher:go_default_library",
        "//private/trust:go_default_library",
        "//private/trust/mock_trust:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
    ],
)
