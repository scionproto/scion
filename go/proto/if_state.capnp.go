// Code generated by capnpc-go. DO NOT EDIT.

package proto

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type IFStateInfo struct{ capnp.Struct }

// IFStateInfo_TypeID is the unique identifier for the type IFStateInfo.
const IFStateInfo_TypeID = 0xc778fb6f09a6fd58

func NewIFStateInfo(s *capnp.Segment) (IFStateInfo, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return IFStateInfo{st}, err
}

func NewRootIFStateInfo(s *capnp.Segment) (IFStateInfo, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return IFStateInfo{st}, err
}

func ReadRootIFStateInfo(msg *capnp.Message) (IFStateInfo, error) {
	root, err := msg.RootPtr()
	return IFStateInfo{root.Struct()}, err
}

func (s IFStateInfo) String() string {
	str, _ := text.Marshal(0xc778fb6f09a6fd58, s.Struct)
	return str
}

func (s IFStateInfo) IfID() uint64 {
	return s.Struct.Uint64(0)
}

func (s IFStateInfo) SetIfID(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s IFStateInfo) Active() bool {
	return s.Struct.Bit(64)
}

func (s IFStateInfo) SetActive(v bool) {
	s.Struct.SetBit(64, v)
}

func (s IFStateInfo) SRevInfo() (SignedBlob, error) {
	p, err := s.Struct.Ptr(0)
	return SignedBlob{Struct: p.Struct()}, err
}

func (s IFStateInfo) HasSRevInfo() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s IFStateInfo) SetSRevInfo(v SignedBlob) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewSRevInfo sets the sRevInfo field to a newly
// allocated SignedBlob struct, preferring placement in s's segment.
func (s IFStateInfo) NewSRevInfo() (SignedBlob, error) {
	ss, err := NewSignedBlob(s.Struct.Segment())
	if err != nil {
		return SignedBlob{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// IFStateInfo_List is a list of IFStateInfo.
type IFStateInfo_List struct{ capnp.List }

// NewIFStateInfo creates a new list of IFStateInfo.
func NewIFStateInfo_List(s *capnp.Segment, sz int32) (IFStateInfo_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1}, sz)
	return IFStateInfo_List{l}, err
}

func (s IFStateInfo_List) At(i int) IFStateInfo { return IFStateInfo{s.List.Struct(i)} }

func (s IFStateInfo_List) Set(i int, v IFStateInfo) error { return s.List.SetStruct(i, v.Struct) }

func (s IFStateInfo_List) String() string {
	str, _ := text.MarshalList(0xc778fb6f09a6fd58, s.List)
	return str
}

// IFStateInfo_Promise is a wrapper for a IFStateInfo promised by a client call.
type IFStateInfo_Promise struct{ *capnp.Pipeline }

func (p IFStateInfo_Promise) Struct() (IFStateInfo, error) {
	s, err := p.Pipeline.Struct()
	return IFStateInfo{s}, err
}

func (p IFStateInfo_Promise) SRevInfo() SignedBlob_Promise {
	return SignedBlob_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type IFStateInfos struct{ capnp.Struct }

// IFStateInfos_TypeID is the unique identifier for the type IFStateInfos.
const IFStateInfos_TypeID = 0xd320ce32f5fc0bbe

func NewIFStateInfos(s *capnp.Segment) (IFStateInfos, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return IFStateInfos{st}, err
}

func NewRootIFStateInfos(s *capnp.Segment) (IFStateInfos, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return IFStateInfos{st}, err
}

func ReadRootIFStateInfos(msg *capnp.Message) (IFStateInfos, error) {
	root, err := msg.RootPtr()
	return IFStateInfos{root.Struct()}, err
}

func (s IFStateInfos) String() string {
	str, _ := text.Marshal(0xd320ce32f5fc0bbe, s.Struct)
	return str
}

func (s IFStateInfos) Infos() (IFStateInfo_List, error) {
	p, err := s.Struct.Ptr(0)
	return IFStateInfo_List{List: p.List()}, err
}

func (s IFStateInfos) HasInfos() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s IFStateInfos) SetInfos(v IFStateInfo_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewInfos sets the infos field to a newly
// allocated IFStateInfo_List, preferring placement in s's segment.
func (s IFStateInfos) NewInfos(n int32) (IFStateInfo_List, error) {
	l, err := NewIFStateInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return IFStateInfo_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// IFStateInfos_List is a list of IFStateInfos.
type IFStateInfos_List struct{ capnp.List }

// NewIFStateInfos creates a new list of IFStateInfos.
func NewIFStateInfos_List(s *capnp.Segment, sz int32) (IFStateInfos_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return IFStateInfos_List{l}, err
}

func (s IFStateInfos_List) At(i int) IFStateInfos { return IFStateInfos{s.List.Struct(i)} }

func (s IFStateInfos_List) Set(i int, v IFStateInfos) error { return s.List.SetStruct(i, v.Struct) }

func (s IFStateInfos_List) String() string {
	str, _ := text.MarshalList(0xd320ce32f5fc0bbe, s.List)
	return str
}

// IFStateInfos_Promise is a wrapper for a IFStateInfos promised by a client call.
type IFStateInfos_Promise struct{ *capnp.Pipeline }

func (p IFStateInfos_Promise) Struct() (IFStateInfos, error) {
	s, err := p.Pipeline.Struct()
	return IFStateInfos{s}, err
}

type IFStateReq struct{ capnp.Struct }

// IFStateReq_TypeID is the unique identifier for the type IFStateReq.
const IFStateReq_TypeID = 0xe8ed776bc19c66a9

func NewIFStateReq(s *capnp.Segment) (IFStateReq, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return IFStateReq{st}, err
}

func NewRootIFStateReq(s *capnp.Segment) (IFStateReq, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return IFStateReq{st}, err
}

func ReadRootIFStateReq(msg *capnp.Message) (IFStateReq, error) {
	root, err := msg.RootPtr()
	return IFStateReq{root.Struct()}, err
}

func (s IFStateReq) String() string {
	str, _ := text.Marshal(0xe8ed776bc19c66a9, s.Struct)
	return str
}

func (s IFStateReq) IfID() uint64 {
	return s.Struct.Uint64(0)
}

func (s IFStateReq) SetIfID(v uint64) {
	s.Struct.SetUint64(0, v)
}

// IFStateReq_List is a list of IFStateReq.
type IFStateReq_List struct{ capnp.List }

// NewIFStateReq creates a new list of IFStateReq.
func NewIFStateReq_List(s *capnp.Segment, sz int32) (IFStateReq_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return IFStateReq_List{l}, err
}

func (s IFStateReq_List) At(i int) IFStateReq { return IFStateReq{s.List.Struct(i)} }

func (s IFStateReq_List) Set(i int, v IFStateReq) error { return s.List.SetStruct(i, v.Struct) }

func (s IFStateReq_List) String() string {
	str, _ := text.MarshalList(0xe8ed776bc19c66a9, s.List)
	return str
}

// IFStateReq_Promise is a wrapper for a IFStateReq promised by a client call.
type IFStateReq_Promise struct{ *capnp.Pipeline }

func (p IFStateReq_Promise) Struct() (IFStateReq, error) {
	s, err := p.Pipeline.Struct()
	return IFStateReq{s}, err
}

const schema_e6d9e9e231c09f51 = "x\xdat\x90\xbfJ#Q\x18\xc5\xcf\xb93\xb3\xd9a" +
	"\xff$\xb37\xfdn\xb1l\x91\x85\xddM\x9a\x854I" +
	"\x91]\x19\x89\x90\x9b4\xe9$\x84\x19\x18\x84\x99\xc8\x84" +
	"\xe8\x0b\xf8\x16B\xb0PH!\xbe\x80\x88Vv\x16Z" +
	"\xc5\xce\x88\xa2\x85\xa5\x8d\x1a\xaeL\x08*\x81p\x9b\xfb" +
	"\x1d~\xfc8\xdf\xf7\xe7\xa7U\x16y\xeb\xf7\x0f\xa0\xb1" +
	"O\xeb\x9dn\x8ew\xec\xe8q\xfd\x18*M\xa1U\xff" +
	"0?\xba\x1d^\xc3b\x0a\x90\xe3/\xe7\xd2\x96\xc9\xcf" +
	"\x92{\xa0>\xf8\xf0t_8\xf9v\x06'\xcdYv" +
	"K\x8e\xe4\xee\x84\x1d\xc8\x12\xa8\x07\xfe\xe6\xd1\xca\xda\xdd" +
	"M\"~\x03\x9b\x091\x94\xa7\xf2j\xc2^\xc8\x12\xf4" +
	"\xf4m\xeb\xc0_\x8e\xbb\xad\xae'~\xb5[\x9d\xb0S" +
	"t\xff7\x92\xd1\x0d\x0d?\xaa\x91\xea\xa3a\x02&\x01" +
	"\xe7_\x0ePe\x83\xaa*\xe8\xb0\x9ce\x12\xbaE@" +
	"U\x0c\xaa\x9a E\x96\x02p\x96\x16\x01U5\xa8\x9a" +
	"\x82\xe9\xc0w+\xb4!h\x83\xa5V\xbb\x1b\xf4<\x12" +
	"\x82\x04u\\\xf7zn\xe8G\x00\x98\xd1\xf5\xcb\x87\xbf" +
	"\x1b\x0b\x85>@f\xc0\xf9\xcdR~\x14'\xd5\xcc\x97" +
	"j\x9f\x0a\x80zoP}\x17\xfc\x1a\x84~\x14\xf33" +
	"X3\xc8\xcc\xeb\xb5\xc1$\x9c\xa7\xad{\\\x9d\x91\xe6" +
	"\xa6\xd2\xec\xcc\x1a\xcf\x01\x00\x00\xff\xff\xfd\xe1z\x18"

func init() {
	schemas.Register(schema_e6d9e9e231c09f51,
		0xc778fb6f09a6fd58,
		0xd320ce32f5fc0bbe,
		0xe8ed776bc19c66a9)
}
