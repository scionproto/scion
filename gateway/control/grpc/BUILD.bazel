load("//tools/lint:go.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "discoverer.go",
        "prefix_fetcher.go",
        "prefix_server.go",
        "probeserver.go",
    ],
    importpath = "github.com/scionproto/scion/gateway/control/grpc",
    visibility = ["//visibility:public"],
    deps = [
        "//gateway/control:go_default_library",
        "//pkg/addr:go_default_library",
        "//pkg/grpc:go_default_library",
        "//pkg/log:go_default_library",
        "//pkg/metrics:go_default_library",
        "//pkg/private/common:go_default_library",
        "//pkg/private/serrors:go_default_library",
        "//pkg/proto/discovery:go_default_library",
        "//pkg/proto/gateway:go_default_library",
        "//pkg/snet:go_default_library",
        "@org_golang_google_grpc//codes:go_default_library",
        "@org_golang_google_grpc//peer:go_default_library",
        "@org_golang_google_grpc//status:go_default_library",
        "@org_golang_google_protobuf//proto:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "prefix_server_test.go",
        "probeserver_test.go",
    ],
    deps = [
        ":go_default_library",
        "//gateway/control/grpc/mock_grpc:go_default_library",
        "//pkg/private/mocks/net/mock_net:go_default_library",
        "//pkg/private/serrors:go_default_library",
        "//pkg/private/xtest:go_default_library",
        "//pkg/proto/gateway:go_default_library",
        "//pkg/snet:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
        "@org_golang_google_grpc//peer:go_default_library",
        "@org_golang_google_protobuf//proto:go_default_library",
    ],
)
