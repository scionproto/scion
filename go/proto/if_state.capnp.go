// Code generated by capnpc-go. DO NOT EDIT.

package proto

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type IFStateInfo struct{ capnp.Struct }

// IFStateInfo_TypeID is the unique identifier for the type IFStateInfo.
const IFStateInfo_TypeID = 0xc778fb6f09a6fd58

func NewIFStateInfo(s *capnp.Segment) (IFStateInfo, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return IFStateInfo{st}, err
}

func NewRootIFStateInfo(s *capnp.Segment) (IFStateInfo, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return IFStateInfo{st}, err
}

func ReadRootIFStateInfo(msg *capnp.Message) (IFStateInfo, error) {
	root, err := msg.RootPtr()
	return IFStateInfo{root.Struct()}, err
}

func (s IFStateInfo) String() string {
	str, _ := text.Marshal(0xc778fb6f09a6fd58, s.Struct)
	return str
}

func (s IFStateInfo) IfID() uint64 {
	return s.Struct.Uint64(0)
}

func (s IFStateInfo) SetIfID(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s IFStateInfo) Active() bool {
	return s.Struct.Bit(64)
}

func (s IFStateInfo) SetActive(v bool) {
	s.Struct.SetBit(64, v)
}

func (s IFStateInfo) SRevInfo() (SignedBlob, error) {
	p, err := s.Struct.Ptr(0)
	return SignedBlob{Struct: p.Struct()}, err
}

func (s IFStateInfo) HasSRevInfo() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s IFStateInfo) SetSRevInfo(v SignedBlob) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewSRevInfo sets the sRevInfo field to a newly
// allocated SignedBlob struct, preferring placement in s's segment.
func (s IFStateInfo) NewSRevInfo() (SignedBlob, error) {
	ss, err := NewSignedBlob(s.Struct.Segment())
	if err != nil {
		return SignedBlob{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// IFStateInfo_List is a list of IFStateInfo.
type IFStateInfo_List struct{ capnp.List }

// NewIFStateInfo creates a new list of IFStateInfo.
func NewIFStateInfo_List(s *capnp.Segment, sz int32) (IFStateInfo_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1}, sz)
	return IFStateInfo_List{l}, err
}

func (s IFStateInfo_List) At(i int) IFStateInfo { return IFStateInfo{s.List.Struct(i)} }

func (s IFStateInfo_List) Set(i int, v IFStateInfo) error { return s.List.SetStruct(i, v.Struct) }

func (s IFStateInfo_List) String() string {
	str, _ := text.MarshalList(0xc778fb6f09a6fd58, s.List)
	return str
}

// IFStateInfo_Promise is a wrapper for a IFStateInfo promised by a client call.
type IFStateInfo_Promise struct{ *capnp.Pipeline }

func (p IFStateInfo_Promise) Struct() (IFStateInfo, error) {
	s, err := p.Pipeline.Struct()
	return IFStateInfo{s}, err
}

func (p IFStateInfo_Promise) SRevInfo() SignedBlob_Promise {
	return SignedBlob_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type IFStateInfos struct{ capnp.Struct }

// IFStateInfos_TypeID is the unique identifier for the type IFStateInfos.
const IFStateInfos_TypeID = 0xd320ce32f5fc0bbe

func NewIFStateInfos(s *capnp.Segment) (IFStateInfos, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return IFStateInfos{st}, err
}

func NewRootIFStateInfos(s *capnp.Segment) (IFStateInfos, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return IFStateInfos{st}, err
}

func ReadRootIFStateInfos(msg *capnp.Message) (IFStateInfos, error) {
	root, err := msg.RootPtr()
	return IFStateInfos{root.Struct()}, err
}

func (s IFStateInfos) String() string {
	str, _ := text.Marshal(0xd320ce32f5fc0bbe, s.Struct)
	return str
}

func (s IFStateInfos) Infos() (IFStateInfo_List, error) {
	p, err := s.Struct.Ptr(0)
	return IFStateInfo_List{List: p.List()}, err
}

func (s IFStateInfos) HasInfos() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s IFStateInfos) SetInfos(v IFStateInfo_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewInfos sets the infos field to a newly
// allocated IFStateInfo_List, preferring placement in s's segment.
func (s IFStateInfos) NewInfos(n int32) (IFStateInfo_List, error) {
	l, err := NewIFStateInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return IFStateInfo_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// IFStateInfos_List is a list of IFStateInfos.
type IFStateInfos_List struct{ capnp.List }

// NewIFStateInfos creates a new list of IFStateInfos.
func NewIFStateInfos_List(s *capnp.Segment, sz int32) (IFStateInfos_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return IFStateInfos_List{l}, err
}

func (s IFStateInfos_List) At(i int) IFStateInfos { return IFStateInfos{s.List.Struct(i)} }

func (s IFStateInfos_List) Set(i int, v IFStateInfos) error { return s.List.SetStruct(i, v.Struct) }

func (s IFStateInfos_List) String() string {
	str, _ := text.MarshalList(0xd320ce32f5fc0bbe, s.List)
	return str
}

// IFStateInfos_Promise is a wrapper for a IFStateInfos promised by a client call.
type IFStateInfos_Promise struct{ *capnp.Pipeline }

func (p IFStateInfos_Promise) Struct() (IFStateInfos, error) {
	s, err := p.Pipeline.Struct()
	return IFStateInfos{s}, err
}

type IFStateReq struct{ capnp.Struct }

// IFStateReq_TypeID is the unique identifier for the type IFStateReq.
const IFStateReq_TypeID = 0xe8ed776bc19c66a9

func NewIFStateReq(s *capnp.Segment) (IFStateReq, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return IFStateReq{st}, err
}

func NewRootIFStateReq(s *capnp.Segment) (IFStateReq, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return IFStateReq{st}, err
}

func ReadRootIFStateReq(msg *capnp.Message) (IFStateReq, error) {
	root, err := msg.RootPtr()
	return IFStateReq{root.Struct()}, err
}

func (s IFStateReq) String() string {
	str, _ := text.Marshal(0xe8ed776bc19c66a9, s.Struct)
	return str
}

func (s IFStateReq) IfID() uint64 {
	return s.Struct.Uint64(0)
}

func (s IFStateReq) SetIfID(v uint64) {
	s.Struct.SetUint64(0, v)
}

// IFStateReq_List is a list of IFStateReq.
type IFStateReq_List struct{ capnp.List }

// NewIFStateReq creates a new list of IFStateReq.
func NewIFStateReq_List(s *capnp.Segment, sz int32) (IFStateReq_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return IFStateReq_List{l}, err
}

func (s IFStateReq_List) At(i int) IFStateReq { return IFStateReq{s.List.Struct(i)} }

func (s IFStateReq_List) Set(i int, v IFStateReq) error { return s.List.SetStruct(i, v.Struct) }

func (s IFStateReq_List) String() string {
	str, _ := text.MarshalList(0xe8ed776bc19c66a9, s.List)
	return str
}

// IFStateReq_Promise is a wrapper for a IFStateReq promised by a client call.
type IFStateReq_Promise struct{ *capnp.Pipeline }

func (p IFStateReq_Promise) Struct() (IFStateReq, error) {
	s, err := p.Pipeline.Struct()
	return IFStateReq{s}, err
}

const schema_e6d9e9e231c09f51 = "x\xdat\x90?K#A\x00\xc5\xdf\x9b\xdd\\.\xdc" +
	"\x9fdw\xd3\xdf\xc1]\x95\xe2\xb8\xa49H\x93\x14\xb9" +
	";V\"d\x92&\x9d\x84\xb0\x0b\x8b\xb8\x1b\xd9\x18\xf5" +
	"\x03\xf8-\x84\xd8(X\x88\xf8\x05D\xab`#\xa8X" +
	"ha\x11A\xb4\xb0\xb4\xf1\x0f##A%\x10\xa6y" +
	"\xf3\xf8\xf1\xe3\xcd\xfc\xbe0\xcb\"\x9f\x18\xfc\x00\x1ak" +
	"L|P\xcd\xa7\x8dT\xf4\xb04\x80LS(\xd9\xdf" +
	"\xcb\x0fo\xce\xae\x90`\x12p\x0e\xacs\xe7\xd4\xd2\xe9" +
	"\xc8\xda\x06\xd5\xee\xa7\xc7\xbb\xc2\xe1\xf7\x13Xi\x8e\xb3" +
	"s\xf6\xd0Y\xb6uZ\xb0K\xa0\xda\xf4W\xf7g\x17" +
	"o\xaf\xb5\xf8\x1dljb\xdd>vv^\xd8-\xbb" +
	"\x045:M\x15\xf83q\xb7\xd5\xf5\xc4\xafv\xab\x13" +
	"v\x8a\xee\xbf\x86\xbe\xba\xa1\xe1G5R~6L\xc0" +
	"$`\xfd\xcd\x01\xb2lPV\x05-\x96\xb3\xd4\xa5[" +
	"\x04d\xc5\xa0\xac\x09Rd)\x00kz\x0a\x90U\x83" +
	"\xb2)\x98\x0e|\xb7\xc2\x14\x04S`\xa9\xd5\xee\x06=" +
	"\x8f\x84 A\x15\xd7\xbd\x9e\x1b\xfa\x11\x00fT\xfd\xf2" +
	"\xfe\xcf\xca\xffB\x1f 3\xe0\xe4eI?\x8a\xf54" +
	"\xf3u\xda\x97\x02 ?\x1a\x94?\x05\xbf\x05\xa1\x1f\xc5" +
	"\xfc\x0a\xd6\x0c2\xf3\xf6\xdb\xa0.'i\xeb\x1e\xe7\xc7" +
	"\xa4\xb9\x914;\xf6\x8c\xe7\x00\x00\x00\xff\xff?\x91{" +
	"\x17"

func init() {
	schemas.Register(schema_e6d9e9e231c09f51,
		0xc778fb6f09a6fd58,
		0xd320ce32f5fc0bbe,
		0xe8ed776bc19c66a9)
}
