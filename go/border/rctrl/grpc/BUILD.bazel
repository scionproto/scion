load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "consumer.go",
        "ifstate.go",
        "revocation.go",
    ],
    importpath = "github.com/scionproto/scion/go/border/rctrl/grpc",
    visibility = ["//visibility:public"],
    deps = [
        "//go/lib/ctrl/path_mgmt:go_default_library",
        "//go/lib/log:go_default_library",
        "//go/lib/metrics:go_default_library",
        "//go/lib/serrors:go_default_library",
        "//go/pkg/grpc:go_default_library",
        "//go/pkg/proto/control_plane:go_default_library",
        "@org_golang_google_grpc//codes:go_default_library",
        "@org_golang_google_grpc//status:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "ifstate_test.go",
        "revocation_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//go/border/rctrl/grpc/mock_grpc:go_default_library",
        "//go/lib/ctrl/path_mgmt:go_default_library",
        "//go/lib/log:go_default_library",
        "//go/lib/metrics:go_default_library",
        "//go/lib/serrors:go_default_library",
        "//go/lib/xtest:go_default_library",
        "//go/pkg/proto/control_plane:go_default_library",
        "//go/pkg/proto/control_plane/mock_control_plane:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
    ],
)
