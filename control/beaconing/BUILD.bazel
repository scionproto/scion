load("//tools/lint:go.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "doc.go",
        "extender.go",
        "handler.go",
        "originator.go",
        "propagator.go",
        "staticinfo_config.go",
        "tick.go",
        "util.go",
        "writer.go",
    ],
    importpath = "github.com/scionproto/scion/control/beaconing",
    visibility = ["//visibility:public"],
    deps = [
        "//control/beacon:go_default_library",
        "//control/ifstate:go_default_library",
        "//pkg/addr:go_default_library",
        "//pkg/log:go_default_library",
        "//pkg/metrics:go_default_library",
        "//pkg/private/common:go_default_library",
        "//pkg/private/prom:go_default_library",
        "//pkg/private/serrors:go_default_library",
        "//pkg/private/util:go_default_library",
        "//pkg/segment:go_default_library",
        "//pkg/segment/extensions/digest:go_default_library",
        "//pkg/segment/extensions/epic:go_default_library",
        "//pkg/segment/extensions/staticinfo:go_default_library",
        "//pkg/slayers/path:go_default_library",
        "//pkg/snet:go_default_library",
        "//private/periodic:go_default_library",
        "//private/segment/seghandler:go_default_library",
        "//private/segment/segverifier:go_default_library",
        "//private/segment/verifier:go_default_library",
        "//private/topology:go_default_library",
        "//private/tracing:go_default_library",
        "@com_github_opentracing_opentracing_go//:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "export_test.go",
        "extender_test.go",
        "handler_test.go",
        "originator_test.go",
        "propagator_test.go",
        "staticinfo_config_test.go",
        "writer_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":go_default_library"],
    deps = [
        "//control/beacon:go_default_library",
        "//control/beaconing/mock_beaconing:go_default_library",
        "//control/ifstate:go_default_library",
        "//pkg/addr:go_default_library",
        "//pkg/private/common:go_default_library",
        "//pkg/private/serrors:go_default_library",
        "//pkg/private/util:go_default_library",
        "//pkg/private/xtest:go_default_library",
        "//pkg/private/xtest/graph:go_default_library",
        "//pkg/proto/crypto:go_default_library",
        "//pkg/scrypto:go_default_library",
        "//pkg/scrypto/cppki:go_default_library",
        "//pkg/scrypto/signed:go_default_library",
        "//pkg/segment:go_default_library",
        "//pkg/segment/extensions/staticinfo:go_default_library",
        "//pkg/slayers/path/scion:go_default_library",
        "//pkg/snet:go_default_library",
        "//pkg/snet/addrutil:go_default_library",
        "//pkg/snet/path:go_default_library",
        "//private/segment/seghandler:go_default_library",
        "//private/segment/verifier/mock_verifier:go_default_library",
        "//private/topology:go_default_library",
        "//private/trust:go_default_library",
        "@af_inet_netaddr//:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
    ],
)
