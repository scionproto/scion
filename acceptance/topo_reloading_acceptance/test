#!/bin/bash

# On a SCION topology where end to end connectivity is available, after
# restarting the dispatcher and flushing SCIOND path databases, end to end
# connectivity should still be available.

TEST_NAME="topo_reloading"
TEST_TOPOLOGY="topology/Tiny.topo"

test_setup() {
    set -e
    ./scion.sh topology zkclean -c $TEST_TOPOLOGY -d -sd=go -ps=go
    # Enable automatic dispatcher reconnects in SCIOND and PS
    for sd in gen/ISD1/*/endhost/sciond.toml; do
        sed -i 's/Level = .*$/Level = "trace"/g' "$sd"
    done
    ./scion.sh run
}

test_run() {
    set -e
	bin/showpaths -srcIA "1-ff00:0:112" -dstIA "1-ff00:0:110" -sciondFromIA || true
    go run acceptance/topo_reloading_acceptance/replace_svc.go -file gen/ISD1/ASff00_0_112/endhost/topology.json -op ps -ivalue 39999 -svalue "127.42.42.42"
    docker kill --signal=HUP sd1-ff00_0_112
    sleep 1
	bin/showpaths -srcIA "1-ff00:0:112" -dstIA "1-ff00:0:110" -sciondFromIA -refresh || true
    sleep 3
	grep "\[TRACE\] \[Messenger\] Sending request" logs/sd1-ff00_0_112.log | tail -1 | grep "1-ff00:0:112,\[127\.42\.42\.42\]:39999" >/dev/null || ( echo "Path segment request to 127.42.42.42:39999 not found in logs" && false )
}

test_teardown() {
    set -e
    ./scion.sh stop
}

print_help() {
    echo
	cat <<-_EOF
	    $PROGRAM name
	        return the name of this test
	    $PROGRAM setup
	        execute only the setup phase.
	    $PROGRAM run
	        execute only the run phase.
	    $PROGRAM teardown
	        execute only the teardown phase.
	_EOF
}

PROGRAM=`basename "$0"`
COMMAND="$1"

case "$COMMAND" in
    name)
        echo $TEST_NAME ;;
    setup|run|teardown)
        "test_$COMMAND" ;;
    *) print_help; exit 1 ;;
esac

