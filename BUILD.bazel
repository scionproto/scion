load("@bazel_gazelle//:def.bzl", "gazelle")
load("@bazel_tools//tools/build_defs/pkg:pkg.bzl", "pkg_tar")
load("@io_bazel_rules_go//go:def.bzl", "nogo")

# gazelle:prefix github.com/scionproto/scion
gazelle(name = "gazelle")

# This is the SCION distributable package. It contains all (binary) services,
# and the required tools.
pkg_tar(
    name = "scion",
    package_dir = "",
    srcs = [
        "//go/border:border",
        "//go/cs:cs",
        "//go/godispatcher:godispatcher",
        "//go/tools/logdog:logdog",
        "//go/sciond:sciond",
        "//go/tools/scion-pki:scion-pki",
        "//go/tools/scmp:scmp",
        "//go/tools/showpaths:showpaths",
        "//go/sig:sig",
    ],
    mode = "0755",
)

# This contains all of the binaries needed to run CI (integration & acceptance
# tests)
pkg_tar(
    name = "scion-ci",
    package_dir = "",
    srcs = [
        "//go/border/braccept:braccept",
        "//go/integration/cert_req:cert_req",
        "//go/integration/cert_req_integration:cert_req_integration",
        "//go/integration/end2end:end2end",
        "//go/integration/end2end_integration:end2end_integration",
        "//go/lib/xtest/graphupdater:graphupdater",
        "//go/examples/pingpong:pingpong",
        "//go/examples/pingpong/pp_integration:pp_integration",
        "//go/tools/buildkite_log_downloader:buildkite_log_downloader",
        "//go/tools/scmp/scmp_integration:scmp_integration",
        "//go/tools/udpproxy:udpproxy",
        "//go/acceptance/sig_ping_acceptance:sig_ping_acceptance",
    ],
    mode = "0755",
)

# This contains all of the binaries needed to run the topology generator.
pkg_tar(
    name = "scion-topo",
    package_dir = "",
    srcs = [
        "//go/tools/scion-pki:scion-pki",
    ],
    mode = "0755",
)

# This is a package of tools used for linting the source code.
pkg_tar(
    name = "lint",
    package_dir = "",
    srcs = [
        "@com_github_client9_misspell//cmd/misspell:misspell",
        "@com_github_jeanmertz_lll//cmd/lll:lll",
        "@com_github_pavius_impi//cmd/impi:impi",
        "@com_github_oncilla_ineffassign//:ineffassign",
    ],
    mode = "0755",
)

# This is a package of tools used for generating code that is checked in
# to git (i.e. outside of bazels reach).
pkg_tar(
    name = "build-tools",
    package_dir = "",
    srcs = [
        "@com_zombiezen_go_capnproto2//capnpc-go:capnpc-go",
    ],
    mode = "0755",
)

# Nogo - Go code analysis tool
nogo(
    name = "nogo",
    config = "nogo.json",
    deps = [
        "//go/lint:log",
        "@com_github_oncilla_gochecks//logcheck:go_tool_library",
        "@com_github_oncilla_gochecks//serrorscheck:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/asmdecl:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/assign:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/atomic:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/bools:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/buildtag:go_tool_library",
        # This crashes the build of @com_github_vishvananda_netlink
        # "@org_golang_x_tools//go/analysis/passes/cgocall:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/composite:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/copylock:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/httpresponse:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/loopclosure:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/lostcancel:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/nilfunc:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/nilness:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/printf:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/shift:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/stdmethods:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/structtag:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/tests:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/unmarshal:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/unreachable:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/unsafeptr:go_tool_library",
        "@org_golang_x_tools//go/analysis/passes/unusedresult:go_tool_library",
    ],
    visibility = ["//visibility:public"],
)
