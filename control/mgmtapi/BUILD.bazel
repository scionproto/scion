load("//tools/lint:go.bzl", "go_library", "go_test")
load("@com_github_scionproto_scion//rules_openapi:defs.bzl", "openapi_generate_go")

genrule(
    name = "bundle",
    srcs = ["//spec:control"],
    outs = ["index.html"],
    cmd = (
        "$(execpath @rules_openapi_npm//redoc-cli/bin:redoc-cli) " +
        "bundle $(location //spec:control) " +
        "-o $@"
    ),
    tools = ["@rules_openapi_npm//redoc-cli/bin:redoc-cli"],
    visibility = ["//visibility:public"],
)

openapi_generate_go(
    name = "api_generated",
    src = "//spec:control",
    package = "mgmtapi",
)

# exclude the *.gen.go filse in the workspace it's only for editor compatibility.
# gazelle:exclude *.gen.go
go_library(
    name = "go_default_library",
    srcs = [
        "api.go",
        "spec.go",
        ":api_generated",  # keep
    ],
    embedsrcs = select({
        "//:mgmtapi_bundle_doc_build": [":bundle"],
        "//conditions:default": [":dummy.html"],
    }),  # keep
    importpath = "github.com/scionproto/scion/control/mgmtapi",
    visibility = ["//visibility:public"],
    deps = [
        "//control/beacon:go_default_library",
        "//control/trust:go_default_library",
        "//pkg/addr:go_default_library",
        "//pkg/private/serrors:go_default_library",
        "//pkg/scrypto/cppki:go_default_library",
        "//pkg/segment:go_default_library",
        "//private/ca/renewal:go_default_library",
        "//private/mgmtapi:go_default_library",
        "//private/mgmtapi/cppki/api:go_default_library",
        "//private/mgmtapi/health/api:go_default_library",
        "//private/mgmtapi/segments/api:go_default_library",
        "//private/storage:go_default_library",
        "//private/storage/beacon:go_default_library",
        "@com_github_deepmap_oapi_codegen//pkg/runtime:go_default_library",  # keep
        "@com_github_getkin_kin_openapi//openapi3:go_default_library",  # keep
        "@com_github_go_chi_chi_v5//:go_default_library",  # keep
        "@com_github_pkg_errors//:go_default_library",  # keep
        "@org_golang_google_protobuf//proto:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = ["api_test.go"],
    data = glob(["testdata/**"]),
    deps = [
        ":go_default_library",
        "//control/beacon:go_default_library",
        "//control/mgmtapi/mock_mgmtapi:go_default_library",
        "//control/trust:go_default_library",
        "//control/trust/mock_trust:go_default_library",
        "//pkg/private/serrors:go_default_library",
        "//pkg/private/xtest:go_default_library",
        "//pkg/scrypto/cppki:go_default_library",
        "//pkg/scrypto/signed:go_default_library",
        "//pkg/segment:go_default_library",
        "//private/ca/renewal:go_default_library",
        "//private/ca/renewal/mock_renewal:go_default_library",
        "//private/storage/beacon:go_default_library",
        "//private/trust:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
    ],
)
