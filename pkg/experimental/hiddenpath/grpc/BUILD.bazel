load("//tools/lint:go.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "discovery.go",
        "lookup.go",
        "registerer.go",
        "registry.go",
        "requester.go",
    ],
    importpath = "github.com/scionproto/scion/pkg/experimental/hiddenpath/grpc",
    visibility = ["//visibility:public"],
    deps = [
        "//control/beaconing:go_default_library",
        "//pkg/addr:go_default_library",
        "//pkg/experimental/hiddenpath:go_default_library",
        "//pkg/grpc:go_default_library",
        "//pkg/log:go_default_library",
        "//pkg/private/serrors:go_default_library",
        "//pkg/proto/control_plane:go_default_library",
        "//pkg/proto/crypto:go_default_library",
        "//pkg/proto/discovery:go_default_library",
        "//pkg/proto/hidden_segment:go_default_library",
        "//pkg/segment:go_default_library",
        "//pkg/snet:go_default_library",
        "//private/segment/segfetcher:go_default_library",
        "//private/segment/verifier:go_default_library",
        "@com_github_golang_protobuf//proto:go_default_library",
        "@org_golang_google_grpc//codes:go_default_library",
        "@org_golang_google_grpc//peer:go_default_library",
        "@org_golang_google_grpc//status:go_default_library",
        "@org_golang_google_protobuf//proto:go_default_library",
        "@org_golang_x_sync//errgroup:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "discovery_test.go",
        "export_test.go",
        "lookup_test.go",
        "registerer_test.go",
        "registry_test.go",
        "requester_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//control/beaconing:go_default_library",
        "//control/beaconing/mock_beaconing:go_default_library",
        "//pkg/addr:go_default_library",
        "//pkg/experimental/hiddenpath:go_default_library",
        "//pkg/experimental/hiddenpath/grpc/mock_grpc:go_default_library",
        "//pkg/experimental/hiddenpath/mock_hiddenpath:go_default_library",
        "//pkg/private/serrors:go_default_library",
        "//pkg/private/xtest:go_default_library",
        "//pkg/private/xtest/graph:go_default_library",
        "//pkg/proto/control_plane:go_default_library",
        "//pkg/proto/crypto:go_default_library",
        "//pkg/proto/discovery:go_default_library",
        "//pkg/proto/discovery/mock_discovery:go_default_library",
        "//pkg/proto/hidden_segment:go_default_library",
        "//pkg/proto/hidden_segment/mock_hidden_segment:go_default_library",
        "//pkg/scrypto/signed:go_default_library",
        "//pkg/segment:go_default_library",
        "//pkg/slayers/path:go_default_library",
        "//pkg/snet:go_default_library",
        "//private/segment/segfetcher:go_default_library",
        "//private/segment/segfetcher/mock_segfetcher:go_default_library",
        "//private/segment/verifier:go_default_library",
        "//private/segment/verifier/mock_verifier:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
        "@org_golang_google_grpc//peer:go_default_library",
        "@org_golang_google_protobuf//proto:go_default_library",
    ],
)
