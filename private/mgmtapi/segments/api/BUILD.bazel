load("//tools/lint:go.bzl", "go_library", "go_test")
load("@com_github_scionproto_scion//rules_openapi:defs.bzl", "openapi_generate_go")

openapi_generate_go(
    name = "api_generated",
    src = "//spec:segments",
    server = True,
    spec = False,
)

# exclude the *.gen.go filse in the workspace it's only for editor compatibility.
# gazelle:exclude *.gen.go
go_library(
    name = "go_default_library",
    srcs = [
        "api.go",
        ":api_generated",  # keep
    ],
    importpath = "github.com/scionproto/scion/private/mgmtapi/segments/api",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/addr:go_default_library",
        "//pkg/private/serrors:go_default_library",
        "//pkg/segment:go_default_library",
        "//private/mgmtapi:go_default_library",
        "//private/pathdb/query:go_default_library",
        "@com_github_deepmap_oapi_codegen//pkg/runtime:go_default_library",  # keep
        "@com_github_go_chi_chi_v5//:go_default_library",  # keep
        "@org_golang_google_protobuf//proto:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = ["api_test.go"],
    data = glob(["testdata/**"]),
    embed = [":go_default_library"],
    deps = [
        "//pkg/addr:go_default_library",
        "//pkg/private/serrors:go_default_library",
        "//pkg/private/xtest:go_default_library",
        "//pkg/private/xtest/graph:go_default_library",
        "//pkg/proto/crypto:go_default_library",
        "//pkg/segment:go_default_library",
        "//pkg/segment/mock_seg:go_default_library",
        "//pkg/slayers/path:go_default_library",
        "//private/mgmtapi/segments/api/mock_api:go_default_library",
        "//private/pathdb/query:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
        "@org_golang_google_protobuf//proto:go_default_library",
    ],
)
