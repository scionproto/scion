// Code generated by capnpc-go. DO NOT EDIT.

package proto

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type CtrlExtnDataList struct{ capnp.Struct }

// CtrlExtnDataList_TypeID is the unique identifier for the type CtrlExtnDataList.
const CtrlExtnDataList_TypeID = 0xcd601dbe8602c166

func NewCtrlExtnDataList(s *capnp.Segment) (CtrlExtnDataList, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CtrlExtnDataList{st}, err
}

func NewRootCtrlExtnDataList(s *capnp.Segment) (CtrlExtnDataList, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CtrlExtnDataList{st}, err
}

func ReadRootCtrlExtnDataList(msg *capnp.Message) (CtrlExtnDataList, error) {
	root, err := msg.RootPtr()
	return CtrlExtnDataList{root.Struct()}, err
}

func (s CtrlExtnDataList) String() string {
	str, _ := text.Marshal(0xcd601dbe8602c166, s.Struct)
	return str
}

func (s CtrlExtnDataList) Items() (CtrlExtnData_List, error) {
	p, err := s.Struct.Ptr(0)
	return CtrlExtnData_List{List: p.List()}, err
}

func (s CtrlExtnDataList) HasItems() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s CtrlExtnDataList) SetItems(v CtrlExtnData_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewItems sets the items field to a newly
// allocated CtrlExtnData_List, preferring placement in s's segment.
func (s CtrlExtnDataList) NewItems(n int32) (CtrlExtnData_List, error) {
	l, err := NewCtrlExtnData_List(s.Struct.Segment(), n)
	if err != nil {
		return CtrlExtnData_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// CtrlExtnDataList_List is a list of CtrlExtnDataList.
type CtrlExtnDataList_List struct{ capnp.List }

// NewCtrlExtnDataList creates a new list of CtrlExtnDataList.
func NewCtrlExtnDataList_List(s *capnp.Segment, sz int32) (CtrlExtnDataList_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return CtrlExtnDataList_List{l}, err
}

func (s CtrlExtnDataList_List) At(i int) CtrlExtnDataList { return CtrlExtnDataList{s.List.Struct(i)} }

func (s CtrlExtnDataList_List) Set(i int, v CtrlExtnDataList) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s CtrlExtnDataList_List) String() string {
	str, _ := text.MarshalList(0xcd601dbe8602c166, s.List)
	return str
}

// CtrlExtnDataList_Promise is a wrapper for a CtrlExtnDataList promised by a client call.
type CtrlExtnDataList_Promise struct{ *capnp.Pipeline }

func (p CtrlExtnDataList_Promise) Struct() (CtrlExtnDataList, error) {
	s, err := p.Pipeline.Struct()
	return CtrlExtnDataList{s}, err
}

type CtrlExtnData struct{ capnp.Struct }

// CtrlExtnData_TypeID is the unique identifier for the type CtrlExtnData.
const CtrlExtnData_TypeID = 0xbd3bde9856b0a03f

func NewCtrlExtnData(s *capnp.Segment) (CtrlExtnData, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return CtrlExtnData{st}, err
}

func NewRootCtrlExtnData(s *capnp.Segment) (CtrlExtnData, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return CtrlExtnData{st}, err
}

func ReadRootCtrlExtnData(msg *capnp.Message) (CtrlExtnData, error) {
	root, err := msg.RootPtr()
	return CtrlExtnData{root.Struct()}, err
}

func (s CtrlExtnData) String() string {
	str, _ := text.Marshal(0xbd3bde9856b0a03f, s.Struct)
	return str
}

func (s CtrlExtnData) Type() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s CtrlExtnData) HasType() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s CtrlExtnData) SetType(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s CtrlExtnData) Data() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s CtrlExtnData) HasData() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s CtrlExtnData) SetData(v []byte) error {
	return s.Struct.SetData(1, v)
}

// CtrlExtnData_List is a list of CtrlExtnData.
type CtrlExtnData_List struct{ capnp.List }

// NewCtrlExtnData creates a new list of CtrlExtnData.
func NewCtrlExtnData_List(s *capnp.Segment, sz int32) (CtrlExtnData_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return CtrlExtnData_List{l}, err
}

func (s CtrlExtnData_List) At(i int) CtrlExtnData { return CtrlExtnData{s.List.Struct(i)} }

func (s CtrlExtnData_List) Set(i int, v CtrlExtnData) error { return s.List.SetStruct(i, v.Struct) }

func (s CtrlExtnData_List) String() string {
	str, _ := text.MarshalList(0xbd3bde9856b0a03f, s.List)
	return str
}

// CtrlExtnData_Promise is a wrapper for a CtrlExtnData promised by a client call.
type CtrlExtnData_Promise struct{ *capnp.Pipeline }

func (p CtrlExtnData_Promise) Struct() (CtrlExtnData, error) {
	s, err := p.Pipeline.Struct()
	return CtrlExtnData{s}, err
}

const schema_fa3f5dec2b78a085 = "x\xda\x12\x88p`\x12d\xdd\xce\xc0\x10\xc8\xc1\xca\xf6" +
	"\xdf~\xc1\x86\xb0\x19\xf7\xac\xf72\x08\x0a0\xfeo]" +
	"P\xa1\xfd&\xd6\xfe\x17\x03+\x13;\x03\x83\xa0\xe3+" +
	"A_\x10\xedY\xce\xc0\xf8?\xed S\xdb>\xd9\x84" +
	"\xb3h\x0a\x19\xd9\x19\x18\x0c\x97r1\x0an\x05\xa9\xdc" +
	"h\xcf\xc0\xf8?\xb9\xa4('>\xb5\xa2\x84)O/" +
	"9\xb1 \xaf\xc0\xca\xb9\xa4(\xc7\xb5\xa2$\x8f\xdf%" +
	"\xb1$1\x80\x911\x90\x83\x99\x85\x81\x81\x85\x91\x81A" +
	"PS\x8b\x81!P\x85\x991\xd0\x80\x89Q\x90\x91Q" +
	"\x84\x11$\xa8\x0b\x12\xd4`f\x0c4ab\xe4/\xa9" +
	",He\xe4e`b\xe4e`\xe4OI,I\x84" +
	"q\xe0\xf60\xa3\xdb\x03\xb2\xc6'\xb3\xb8\x84\x81\x01d" +
	"\x19\x0b\xdc2^#\x90\xa7\x99\x19\x03U\x98\x18\xe53" +
	"KRs\x8b\x19\xf9\x18\x18\x03\x98\x19\x19\x05\x10\xe1\xc0" +
	"\xc0\x08\x12\x04\x04\x00\x00\xff\xffFkF\xf3"

func init() {
	schemas.Register(schema_fa3f5dec2b78a085,
		0xbd3bde9856b0a03f,
		0xcd601dbe8602c166)
}
