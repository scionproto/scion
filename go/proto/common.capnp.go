// Code generated by capnpc-go. DO NOT EDIT.

package proto

import (
	capnp "zombiezen.com/go/capnproto2"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type LinkType uint16

// LinkType_TypeID is the unique identifier for the type LinkType.
const LinkType_TypeID = 0x916c98f48c9bbb64

// Values of LinkType.
const (
	LinkType_unset  LinkType = 0
	LinkType_core   LinkType = 1
	LinkType_parent LinkType = 2
	LinkType_child  LinkType = 3
	LinkType_peer   LinkType = 4
)

// String returns the enum's constant name.
func (c LinkType) String() string {
	switch c {
	case LinkType_unset:
		return "unset"
	case LinkType_core:
		return "core"
	case LinkType_parent:
		return "parent"
	case LinkType_child:
		return "child"
	case LinkType_peer:
		return "peer"

	default:
		return ""
	}
}

// LinkTypeFromString returns the enum value with a name,
// or the zero value if there's no such value.
func LinkTypeFromString(c string) LinkType {
	switch c {
	case "unset":
		return LinkType_unset
	case "core":
		return LinkType_core
	case "parent":
		return LinkType_parent
	case "child":
		return LinkType_child
	case "peer":
		return LinkType_peer

	default:
		return 0
	}
}

type LinkType_List struct{ capnp.List }

func NewLinkType_List(s *capnp.Segment, sz int32) (LinkType_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return LinkType_List{l.List}, err
}

func (l LinkType_List) At(i int) LinkType {
	ul := capnp.UInt16List{List: l.List}
	return LinkType(ul.At(i))
}

func (l LinkType_List) Set(i int, v LinkType) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type ServiceType uint16

// ServiceType_TypeID is the unique identifier for the type ServiceType.
const ServiceType_TypeID = 0xe2522d291bd06774

// Values of ServiceType.
const (
	ServiceType_unset ServiceType = 0
	ServiceType_bs    ServiceType = 1
	ServiceType_ps    ServiceType = 2
	ServiceType_cs    ServiceType = 3
	ServiceType_sb    ServiceType = 4
	ServiceType_ds    ServiceType = 5
	ServiceType_br    ServiceType = 6
	ServiceType_sig   ServiceType = 7
	ServiceType_hps   ServiceType = 8
)

// String returns the enum's constant name.
func (c ServiceType) String() string {
	switch c {
	case ServiceType_unset:
		return "unset"
	case ServiceType_bs:
		return "bs"
	case ServiceType_ps:
		return "ps"
	case ServiceType_cs:
		return "cs"
	case ServiceType_sb:
		return "sb"
	case ServiceType_ds:
		return "ds"
	case ServiceType_br:
		return "br"
	case ServiceType_sig:
		return "sig"
	case ServiceType_hps:
		return "hps"

	default:
		return ""
	}
}

// ServiceTypeFromString returns the enum value with a name,
// or the zero value if there's no such value.
func ServiceTypeFromString(c string) ServiceType {
	switch c {
	case "unset":
		return ServiceType_unset
	case "bs":
		return ServiceType_bs
	case "ps":
		return ServiceType_ps
	case "cs":
		return ServiceType_cs
	case "sb":
		return ServiceType_sb
	case "ds":
		return ServiceType_ds
	case "br":
		return ServiceType_br
	case "sig":
		return ServiceType_sig
	case "hps":
		return ServiceType_hps

	default:
		return 0
	}
}

type ServiceType_List struct{ capnp.List }

func NewServiceType_List(s *capnp.Segment, sz int32) (ServiceType_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return ServiceType_List{l.List}, err
}

func (l ServiceType_List) At(i int) ServiceType {
	ul := capnp.UInt16List{List: l.List}
	return ServiceType(ul.At(i))
}

func (l ServiceType_List) Set(i int, v ServiceType) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

const schema_fa01960eced2b529 = "x\xda2\xe0au`2d\xd5Wc`\x08\xde\xc3" +
	"\xc8\xca\xf6?e\xf7\xec\x9e/3r&2\x08\xf22" +
	"\xfd\xd7\xdcz\xe9\x1c\xdf4\xc6_\x0c\x0c\x8c\xc2\x7f\x85" +
	"6\x09\xb3\x0a\xb330\x083\x0a\xd730\xfe/I" +
	"\xbf \xad\xa9\x1b\xf4\x08C\xa1\xa9\xf0)aG\xb0B" +
	"[\xe1\xfb\x0c\xff\xa1p\xc3\xff\xe4\xfc\xdc\xdc\xfc<\xbd" +
	"d\xc6\xc4\x82\xbc\x02+\x9f\xcc<\xf9\xec\x90\xca\x82\xd4" +
	"\x00F\xc6@\x11F&\x06\x06AS#\x06\x06FF" +
	"A]-\x06\x06F&AU+\x06\x06FfAY" +
	"\x90 \x8b\xa0\xa8\x16\x03\x83|i^qj\x09\x7fr" +
	"~Q\xaa}AbQj^\x89|rFfN\x0a" +
	"\x7fAjj\x11\xdcx&\xb0\xf1\xc1\xa9Ee\x99\xc9" +
	"\xa9 \x0b\x18\x18@V\xa8\x80\xadH\x85X\x11+\x05" +
	"\xb6\"T\x0al\x85\xaf\x14\xd8\x0aW\x10\xc5*h\x0b" +
	"\xa2\xd8\x04MA\x14\xbb\xa0\xae\x12\x03\x03#\x87\xa0\xaa" +
	"\x12\xccz\xe6\xa4b\xe6\x82b\xe6\xe4b\xe6\xe2$\xe6" +
	"\x94b\xe6\xa4\"\xf6\xe2\xcct\xf6\x8c\x82b@\x00\x00" +
	"\x00\xff\xffP\xb8QE"

func init() {
	schemas.Register(schema_fa01960eced2b529,
		0x916c98f48c9bbb64,
		0xe2522d291bd06774)
}
