#!/bin/bash

# The $GO_INSTALL environment variable, if set, tells this script to
# install/upgrade (as appropriate) a compatible Go version. This env var isn't
# set by default, and should only be used in an automated environment, or if
# the user knows what they're doing. If you already have a /usr/local/go dir,
# setting $GO_INSTALL may remove that directory (if your existing Go install is
# not in your $PATH, or if the version isn't compatible), so use with caution.

set -e

BASE=$(dirname "$0")
. $(dirname "$BASE")/common.sh
. "$BASE/common.sh"

go_check_install() {
    if go_installed; then
        go_ver_check && return
        go_ver_msg
    fi
    [ -d /usr/local/go ] && sudo rm -r /usr/local/go
    go_install
}

go_install() {
    if [ -d /usr/local/go ]; then
        echo "ERROR: cannot install Go, /usr/local/go already exists"
        exit 1
    fi
    if [ "$(uname -o)" = "Linux" ]; then
        # Feeling paranoid.
        echo "ERROR: Non-linux OSes ($(uname -o)) aren't supported"
        exit 1
    fi
    local src sum
    case "$(uname -m)" in
        x86_64)
            src=https://dl.google.com/go/go1.9.4.linux-amd64.tar.gz
            sum=15b0937615809f87321a457bb1265f946f9f6e736c563d6c5e0bd2c22e44f779
            ;;
        i?86)
            src=https://dl.google.com/go/go1.9.4.linux-386.tar.gz
            sum=d440aee90dad851630559bcee2b767b543ce7e54f45162908f3e12c3489888ab
            ;;
        arm*)
            src=https://dl.google.com/go/go1.9.4.linux-armv6l.tar.gz
            sum=3c8cf3f79754a9fd6b33e2d8f930ee37d488328d460065992c72bc41c7b41a49
            ;;
        aarch64)
            src=https://dl.google.com/go/go1.9.4.linux-arm64.tar.gz
            sum=41a71231e99ccc9989867dce2fcb697921a68ede0bd06fc288ab6c2f56be8864
            ;;
        *)
            echo "ERROR: unsupported architecture '$(uname -m)'"
            exit 1
    esac
    tmpdir=$(mktemp -d /tmp/go_install.XXXXXXX)
    file="${tmpdir:?}/$(basename ${src:?})"
    echo "$sum  $file"  > "$tmpdir/SHA256SUM"
    echo "Downloading $src to $file"
    curl -L# "$src" -o "$file"
    echo "$sum $file" | sha256sum -c -
    echo "Installing to /usr/local/go. Ensure that /usr/local/go/bin is in your \$PATH"
    sudo tar -C /usr/local -xf "$file"
    rm -r "${tmpdir:?}"
}

# First handle the case where Go isn't installed, or needs to be upgraded.
if [ -n "$GO_INSTALL" ]; then
    go_check_install
fi

# Then confirm that go is installed, and with an appropriate version.
if go_installed; then
    go_ver_check || { echo "ERROR: $(go_ver_msg)"; exit 1; }
else
    echo "ERROR: Go not found in \$PATH ($PATH)"
    exit 1
fi

[ -z "$("$BASE/check")" ] && exit

echo "Installing/updating govendor dep manager"

# Make sure GOPATH is set
[ -n "$GOPATH" ] || { echo "ERROR: \$GOPATH is unset"; exit 1; }

GOPATH_BASE=${GOPATH%%:*} # Find the first dir in $GOPATH

host_user=github.com/kardianos
project=govendor
parent_dir="$GOPATH_BASE/src/${host_user:?}"
url="https://$host_user/${project:?}.git"
commit=fbbc78e8d1b533dfcf81c2a4be2cec2617a926f7

# Perform initial clone, if necessary
mkdir -p "${parent_dir:?}"
cd "$parent_dir"
[ -d "${project:?}" ] || git clone "${url:?}"

# Fetch/update/install
cd "$project"
git fetch
git checkout "${commit:?}"
go install -v
