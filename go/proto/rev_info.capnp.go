// Code generated by capnpc-go. DO NOT EDIT.

package proto

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type RevInfo struct{ capnp.Struct }

// RevInfo_TypeID is the unique identifier for the type RevInfo.
const RevInfo_TypeID = 0xe40561cf10a34bc8

func NewRevInfo(s *capnp.Segment) (RevInfo, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 32, PointerCount: 0})
	return RevInfo{st}, err
}

func NewRootRevInfo(s *capnp.Segment) (RevInfo, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 32, PointerCount: 0})
	return RevInfo{st}, err
}

func ReadRootRevInfo(msg *capnp.Message) (RevInfo, error) {
	root, err := msg.RootPtr()
	return RevInfo{root.Struct()}, err
}

func (s RevInfo) String() string {
	str, _ := text.Marshal(0xe40561cf10a34bc8, s.Struct)
	return str
}

func (s RevInfo) IfID() uint64 {
	return s.Struct.Uint64(0)
}

func (s RevInfo) SetIfID(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s RevInfo) Isdas() uint64 {
	return s.Struct.Uint64(8)
}

func (s RevInfo) SetIsdas(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s RevInfo) LinkType() LinkType {
	return LinkType(s.Struct.Uint16(16))
}

func (s RevInfo) SetLinkType(v LinkType) {
	s.Struct.SetUint16(16, uint16(v))
}

func (s RevInfo) Timestamp() uint32 {
	return s.Struct.Uint32(20)
}

func (s RevInfo) SetTimestamp(v uint32) {
	s.Struct.SetUint32(20, v)
}

func (s RevInfo) Ttl() uint32 {
	return s.Struct.Uint32(24)
}

func (s RevInfo) SetTtl(v uint32) {
	s.Struct.SetUint32(24, v)
}

// RevInfo_List is a list of RevInfo.
type RevInfo_List struct{ capnp.List }

// NewRevInfo creates a new list of RevInfo.
func NewRevInfo_List(s *capnp.Segment, sz int32) (RevInfo_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 32, PointerCount: 0}, sz)
	return RevInfo_List{l}, err
}

func (s RevInfo_List) At(i int) RevInfo { return RevInfo{s.List.Struct(i)} }

func (s RevInfo_List) Set(i int, v RevInfo) error { return s.List.SetStruct(i, v.Struct) }

func (s RevInfo_List) String() string {
	str, _ := text.MarshalList(0xe40561cf10a34bc8, s.List)
	return str
}

// RevInfo_Promise is a wrapper for a RevInfo promised by a client call.
type RevInfo_Promise struct{ *capnp.Pipeline }

func (p RevInfo_Promise) Struct() (RevInfo, error) {
	s, err := p.Pipeline.Struct()
	return RevInfo{s}, err
}

const schema_c434abcc856ab808 = "x\xda4\x88=K\xf3P\x1cG\x7f\xbf{o\xdat" +
	"\xcasi\xf6\xc2\xe3\xe6 \xbeM.:\xb8T\x17\xff" +
	"\xd5]\x82M!\xda\xa6\xc1\x84\xa2\xa0\x83\xd0\x82C\x85" +
	":\x08\x05\x1d\x04G\xbf\x80\xe8*\xa8\xe0\x0b~\x07?" +
	"\x82\xfb\x15\xc1r\x96s\xce\xec\xbbYQs\xde\xd3\x14" +
	"\xb0yM\xaf\xe4\x9e\xd7o\xfe}D\xde\x17$\xa0q" +
	"\xfe\xdd\xee\xe0\xf5v\xf1\x11\xa6\x0cT_\xec}\xf5\xd3" +
	"\x96\x81\x857[#\xdc\x1f\xa9\xdb\x8f{\xdbI\xda\xea" +
	"rf'\xca\xd2l\xa9\xb1\x1c\xf7\xeai\xab\xbbAJ" +
	"\xa8\x0d`\x08\xd8\xe3i@\x0e4\xa5\xafh\xc9\x90\xbf" +
	"\xf3d\x1e\x90#M9U\xb4\xca\x0f\xa9\x00;X\x03" +
	"\xa4\xaf)#E\xab\xbd\x90\x1a\xb0g\x0d@\x86\x9a2" +
	"V\xb4\xa6\x14\xd2\x00\xf6\xe2? #M\xb9R\x0c\x92" +
	"V}\x95\x15(V\xc0Z\x927\xa3|R\xae\x9d\xa4" +
	"{[\x87Y\x0c\x80\x81k>\\\x0e\xbf\xc7\xeds\x80" +
	"\x0c@W$\x9d8/\xa2\x0e\x98\xd1\x87\xa2\x0f\x96\x8b" +
	"\xa2=\xf1\x9f\x00\x00\x00\xff\xff\xf4\xb8B\x83"

func init() {
	schemas.Register(schema_c434abcc856ab808,
		0xe40561cf10a34bc8)
}
