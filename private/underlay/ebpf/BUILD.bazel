load("//tools/lint:go.bzl", "go_library", "go_test")

# Note about bpf_helpers.h. This files was copied from
# https://github.com/cilium/ebpf/blob/main/examples/headers which took it
# from https://github.com/libbpf/libbpf/tree/master/src. It carries no
# inline copyright and is offered under either LGPL-2.1 or BSD-2-Clause. We
# chose the latter. bpf_helper_defs.h has the same provenance and no LICENSING
# or copyright terms whatsoever.
genrule(
    # The generated file is bazel-bin/private/underlay/ebpf/portfilter_bpfel.go
    name = "gen_bpf_filter_go",
    srcs = [
        "portfilter.c",
        "bpf_helpers.h",
        "bpf_helper_defs.h",
    ],
    outs = [
        "portfilter_bpfel.go",
        "portfilter_bpfel.o",
    ],
    cmd = "GOPACKAGE=ebpf $(execpath @com_github_cilium_ebpf//cmd/bpf2go) -output-dir $$(dirname $(location portfilter_bpfel.go)) -tags linux portfilter $(location portfilter.c)",
    tools = ["@com_github_cilium_ebpf//cmd/bpf2go"],
)

go_library(
    name = "go_default_library",
    srcs = [
        "bpf_helper_defs.h",
        "bpf_helpers.h",
        "portfilter.go",
        "portfilter_bpfel.go",
        "portfilter_lint.go",  # keep
    ],
    embedsrcs = [
        "portfilter_bpfel.o",  #keep
    ],
    importpath = "github.com/scionproto/scion/private/underlay/ebpf",
    visibility = ["//visibility:public"],
    deps = ["@com_github_cilium_ebpf//:go_default_library"],
)

# Builds the portfilter test; but it will be missing the required capabilities; so we must not
# attempt to run it. We are forced to name the artefact "go_default_test"; otherwise gazelle
# creates its own incorrect version.
go_test(
    name = "go_default_test",
    srcs = ["portfilter_test.go"],
    tags = ["manual"],
    deps = [
        ":go_default_library",
        "@com_github_gopacket_gopacket//:go_default_library",
        "@com_github_gopacket_gopacket//afpacket:go_default_library",
        "@com_github_gopacket_gopacket//layers:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
        "@com_github_vishvananda_netlink//:go_default_library",
    ],
)

# Adds required capabilities to the portfilter test. Otherwise it cannot be executed.
genrule(
    name = "gen_portfilter_test_cap",
    testonly = True,
    srcs = [
        "go_default_test",
    ],
    outs = [
        "portfilter_test_cap",
    ],
    cmd_bash = "cp $< $@ ; /usr/bin/sudo setcap \"cap_bpf=ep cap_net_admin=ep cap_sys_admin=ep cap_net_raw=ep\" $@",
)

# This is the rule that actually runs the portfilter test.
sh_test(
    name = "portfilter_test",
    testonly = True,
    srcs = ["portfilter_test_cap"],
    tags = [
        "supports-graceful-termination",
        "unit",
    ],
)
