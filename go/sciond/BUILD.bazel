load("@io_bazel_rules_go//go:def.bzl", "go_library")
load("//:scion.bzl", "scion_go_binary")

scion_go_binary(
    name = "sciond",
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
)

go_library(
    name = "go_default_library",
    srcs = ["main.go"],
    importpath = "github.com/scionproto/scion/go/sciond",
    visibility = ["//visibility:private"],
    deps = [
        "//go/lib/addr:go_default_library",
        "//go/lib/config:go_default_library",
        "//go/lib/env:go_default_library",
        "//go/lib/fatal:go_default_library",
        "//go/lib/infra/infraenv:go_default_library",
        "//go/lib/infra/modules/itopo:go_default_library",
        "//go/lib/infra/modules/segfetcher/grpc:go_default_library",
        "//go/lib/log:go_default_library",
        "//go/lib/pathdb:go_default_library",
        "//go/lib/periodic:go_default_library",
        "//go/lib/prom:go_default_library",
        "//go/lib/revcache:go_default_library",
        "//go/lib/serrors:go_default_library",
        "//go/lib/topology:go_default_library",
        "//go/pkg/command:go_default_library",
        "//go/pkg/grpc:go_default_library",
        "//go/pkg/proto/daemon:go_default_library",
        "//go/pkg/sciond:go_default_library",
        "//go/pkg/sciond/config:go_default_library",
        "//go/pkg/sciond/fetcher:go_default_library",
        "//go/pkg/service:go_default_library",
        "//go/pkg/storage:go_default_library",
        "//go/pkg/trust:go_default_library",
        "//go/pkg/trust/compat:go_default_library",
        "//go/pkg/trust/metrics:go_default_library",
        "@com_github_spf13_cobra//:go_default_library",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//resolver:go_default_library",
    ],
)
