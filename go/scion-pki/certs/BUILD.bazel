load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "certs.go",
        "renew.go",
        "verify.go",
    ],
    importpath = "github.com/scionproto/scion/go/scion-pki/certs",
    visibility = ["//visibility:public"],
    deps = [
        "//go/lib/addr:go_default_library",
        "//go/lib/infra:go_default_library",
        "//go/lib/infra/disp:go_default_library",
        "//go/lib/infra/messenger:go_default_library",
        "//go/lib/log:go_default_library",
        "//go/lib/sciond:go_default_library",
        "//go/lib/scrypto/cppki:go_default_library",
        "//go/lib/serrors:go_default_library",
        "//go/lib/snet:go_default_library",
        "//go/lib/snet/addrutil:go_default_library",
        "//go/lib/sock/reliable:go_default_library",
        "//go/lib/svc:go_default_library",
        "//go/pkg/trust:go_default_library",
        "//go/pkg/trust/renewal:go_default_library",
        "@com_github_spf13_cobra//:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = ["renew_test.go"],
    data = glob(["testdata/**"]),
    embed = [":go_default_library"],
    deps = [
        "//go/lib/addr:go_default_library",
        "//go/lib/ctrl/cert_mgmt:go_default_library",
        "//go/lib/infra:go_default_library",
        "//go/lib/infra/mock_infra:go_default_library",
        "//go/lib/sciond:go_default_library",
        "//go/lib/scrypto/cppki:go_default_library",
        "//go/lib/snet:go_default_library",
        "//go/lib/sock/reliable:go_default_library",
        "//go/lib/xtest:go_default_library",
        "//go/pkg/trust:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
    ],
)
