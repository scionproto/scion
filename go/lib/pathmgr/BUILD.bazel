load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "pathmgr.go",
        "polling_policy.go",
        "syncpaths.go",
        "watch.go",
    ],
    importpath = "github.com/scionproto/scion/go/lib/pathmgr",
    visibility = ["//visibility:public"],
    deps = [
        "//go/lib/addr:go_default_library",
        "//go/lib/common:go_default_library",
        "//go/lib/ctrl/path_mgmt:go_default_library",
        "//go/lib/log:go_default_library",
        "//go/lib/pathpol:go_default_library",
        "//go/lib/periodic:go_default_library",
        "//go/lib/sciond:go_default_library",
        "//go/lib/snet:go_default_library",
        "//go/lib/spath/spathmeta:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "main_test.go",
        "pathmgr_test.go",
        "syncpaths_test.go",
        "util_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//go/lib/addr:go_default_library",
        "//go/lib/common:go_default_library",
        "//go/lib/ctrl/path_mgmt:go_default_library",
        "//go/lib/infra:go_default_library",
        "//go/lib/log:go_default_library",
        "//go/lib/pathmgr/mock_pathmgr:go_default_library",
        "//go/lib/pathpol:go_default_library",
        "//go/lib/sciond:go_default_library",
        "//go/lib/sciond/mock_sciond:go_default_library",
        "//go/lib/snet:go_default_library",
        "//go/lib/snet/mock_snet:go_default_library",
        "//go/lib/spath/spathmeta:go_default_library",
        "//go/lib/xtest:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_smartystreets_goconvey//convey:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
    ],
)
