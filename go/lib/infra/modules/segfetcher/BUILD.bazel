load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "doc.go",
        "fetcher.go",
        "metrics.go",
        "pather.go",
        "request.go",
        "requester.go",
        "resolver.go",
        "revocation.go",
        "segs.go",
        "splitter.go",
        "validator.go",
    ],
    importpath = "github.com/scionproto/scion/go/lib/infra/modules/segfetcher",
    visibility = ["//visibility:public"],
    deps = [
        "//go/lib/addr:go_default_library",
        "//go/lib/common:go_default_library",
        "//go/lib/ctrl/path_mgmt:go_default_library",
        "//go/lib/ctrl/seg:go_default_library",
        "//go/lib/infra:go_default_library",
        "//go/lib/infra/messenger:go_default_library",
        "//go/lib/infra/modules/combinator:go_default_library",
        "//go/lib/infra/modules/segfetcher/internal/metrics:go_default_library",
        "//go/lib/infra/modules/seghandler:go_default_library",
        "//go/lib/log:go_default_library",
        "//go/lib/pathdb:go_default_library",
        "//go/lib/pathdb/query:go_default_library",
        "//go/lib/prom:go_default_library",
        "//go/lib/revcache:go_default_library",
        "//go/lib/serrors:go_default_library",
        "//go/lib/topology:go_default_library",
        "//go/proto:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "fetcher_test.go",
        "requester_test.go",
        "resolver_test.go",
        "revocation_test.go",
        "splitter_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//go/lib/addr:go_default_library",
        "//go/lib/common:go_default_library",
        "//go/lib/ctrl/path_mgmt:go_default_library",
        "//go/lib/ctrl/seg:go_default_library",
        "//go/lib/infra:go_default_library",
        "//go/lib/infra/mock_infra:go_default_library",
        "//go/lib/infra/modules/segfetcher/mock_segfetcher:go_default_library",
        "//go/lib/pathdb/mock_pathdb:go_default_library",
        "//go/lib/pathdb/query:go_default_library",
        "//go/lib/revcache:go_default_library",
        "//go/lib/revcache/mock_revcache:go_default_library",
        "//go/lib/xtest:go_default_library",
        "//go/lib/xtest/graph:go_default_library",
        "//go/lib/xtest/matchers:go_default_library",
        "//go/proto:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
    ],
)
