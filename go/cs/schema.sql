--- contains the schema for the control plane service.
--- beacon DB
CREATE TABLE beacons(
    row_id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    seg_id BYTEA UNIQUE NOT NULL,
    full_id BYTEA UNIQUE NOT NULL,
    start_isd INTEGER NOT NULL,
    start_as BIGINT NOT NULL,
    in_intf_id INTEGER NOT NULL,
    hops_length INTEGER NOT NULL,
    info_time TIMESTAMP WITH TIME ZONE NOT NULL,
    expiration_time TIMESTAMP WITH TIME ZONE NOT NULL,
    last_updated TIMESTAMP WITH TIME ZONE NOT NULL,
    usage INTEGER NOT NULL,
    beacon BYTEA NOT NULL
);
CREATE TABLE intf_to_beacon(
    isd_id INTEGER NOT NULL,
    as_id BIGINT NOT NULL,
    intf_id INTEGER NOT NULL,
    beacon_row_id INTEGER NOT NULL,
    FOREIGN KEY (beacon_row_id) REFERENCES beacons(row_id) ON DELETE CASCADE,
    PRIMARY KEY (beacon_row_id, isd_id, as_id, intf_id)
);
--- revocations DB (shared for beacon and path)
CREATE TABLE revocations(
    isd_id INTEGER NOT NULL,
    as_id BIGINT NOT NULL,
    intf_id INTEGER NOT NULL,
    link_type INTEGER NOT NULL,
    issuing_time BIGINT NOT NULL,
    expiration_time TIMESTAMP WITH TIME ZONE NOT NULL,
    raw_signed_rev BYTEA NOT NULL,
    PRIMARY KEY (isd_id, as_id, intf_id)
);
--- trust DB
CREATE TABLE trcs(
    isd_id INTEGER NOT NULL,
    version BIGINT NOT NULL,
    raw BYTEA NOT NULL,
    pld_hash BYTEA NOT NULL,
    trc JSONB NOT NULL,
    PRIMARY KEY (isd_id, version)
);
CREATE TABLE chains(
    isd_id INTEGER NOT NULL,
    as_id BIGINT NOT NULL,
    version BIGINT NOT NULL,
    raw BYTEA NOT NULL,
    as_hash BYTEA NOT NULL,
    issuer_hash BYTEA NOT NULL,
    PRIMARY KEY (isd_id, as_id, version)
);
CREATE TABLE issuer_certs(
    isd_id INTEGER NOT NULL,
    as_id BIGINT NOT NULL,
    version BIGINT NOT NULL,
    pld BYTEA NOT NULL,
    pld_hash BYTEA NOT NULL,
    protected BYTEA NOT NULL,
    signature BYTEA NOT NULL,
    PRIMARY KEY (isd_id, as_id, version)
);

--- path DB
CREATE TABLE segments (
    row_id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    seg_id BYTEA UNIQUE NOT NULL,
    full_id BYTEA UNIQUE NOT NULL,
    last_updated TIMESTAMP WITH TIME ZONE NOT NULL,
    info_ts TIMESTAMP WITH TIME ZONE NOT NULL,
    segment BYTEA NOT NULL,
    max_expiry TIMESTAMP WITH TIME ZONE NOT NULL,
    start_isd_id INTEGER NOT NULL,
    start_as_id BIGINT NOT NULL,
    end_isd_id INTEGER NOT NULL,
    end_as_id BIGINT NOT NULL
);
CREATE TABLE intf_to_seg(
    isd_id INTEGER NOT NULL,
    as_id BIGINT NOT NULL,
    intf_id INTEGER NOT NULL,
    seg_row_id INTEGER NOT NULL,
    FOREIGN KEY (seg_row_id) REFERENCES segments(row_id) ON DELETE CASCADE
);
CREATE TABLE seg_types(
    seg_row_id INTEGER NOT NULL,
    type INTEGER NOT NULL,
    PRIMARY KEY (seg_row_id, type),
    FOREIGN KEY (seg_row_id) REFERENCES segments(row_id) ON DELETE CASCADE
);
CREATE TABLE hp_cfg_ids(
    seg_row_id INTEGER NOT NULL,
    isd_id INTEGER NOT NULL,
    as_id BIGINT NOT NULL,
    cfg_id BIGINT NOT NULL,
    PRIMARY KEY (seg_row_id, isd_id, as_id, cfg_id),
    FOREIGN KEY (seg_row_id) REFERENCES segments(row_id) ON DELETE CASCADE
);
CREATE TABLE next_query(
    row_id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    src_isd_id INTEGER NOT NULL,
    src_as_id BIGINT NOT NULL,
    dst_isd_id INTEGER NOT NULL,
    dst_as_id BIGINT NOT NULL,
    policy BYTEA NOT NULL,
    next_query TIMESTAMP WITH TIME ZONE NOT NULL,
    UNIQUE (src_isd_id, src_as_id, dst_isd_id, dst_as_id, policy)
);
