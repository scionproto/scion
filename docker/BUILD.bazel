load("@io_bazel_rules_docker//container:container.bzl", "container_bundle")
load(":scion_app.bzl", "scion_app_base", "scion_app_images")
load(":tester.bzl", "build_tester_image")

container_bundle(
    name = "prod",
    images = {
        "scion_border:latest": ":border_prod",
        "scion_posix-router:latest": "posix-router_prod",
        "scion_cs:latest": ":cs_prod",
        "scion_dispatcher:latest": ":dispatcher_prod",
        "scion_sciond:latest": ":sciond_prod",
        "scion_sig:latest": ":sig_prod",
    },
)

container_bundle(
    name = "debug",
    images = {
        "scion_border_debug:latest": ":border_debug",
        "scion_posix-router_debug:latest": "posix-router_debug",
        "scion_cs_debug:latest": ":cs_debug",
        "scion_dispatcher_debug:latest": ":dispatcher_debug",
        "scion_sciond_debug:latest": ":sciond_debug",
        "scion_sig_debug:latest": ":sig_debug",
    },
)

container_bundle(
    name = "test",
    images = {
        "scion_tester:latest": ":scion_tester",
    },
)

scion_app_base()

build_tester_image()

scion_app_images(
    name = "border",
    appdir = "/app",
    binary = "//go/border:border",
    cmd = [
        "--config",
        "/share/conf/br.toml",
    ],
    entrypoint = ["/app/border"],
    workdir = "/share",
)

scion_app_images(
    name = "posix-router",
    appdir = "/app",
    binary = "//go/posix-router",
    cmd = [
        "--config",
        "/share/conf/br.toml",
    ],
    entrypoint = ["/app/posix-router"],
    workdir = "/share",
)

scion_app_images(
    name = "cs",
    appdir = "/app",
    binary = "//go/cs:cs",
    cmd = [
        "--config",
        "/share/conf/cs.toml",
    ],
    entrypoint = ["/app/cs"],
    workdir = "/share",
)

scion_app_images(
    name = "dispatcher",
    appdir = "/app",
    binary = "//go/dispatcher:dispatcher",
    cmd = [
        "--config",
        "/share/conf/disp.toml",
    ],
    entrypoint = ["/app/dispatcher"],
    workdir = "/share",
)

scion_app_images(
    name = "sciond",
    appdir = "/app",
    binary = "//go/sciond:sciond",
    cmd = [
        "--config",
        "/share/conf/sd.toml",
    ],
    entrypoint = ["/app/sciond"],
    workdir = "/share",
)

scion_app_images(
    name = "sig",
    appdir = "/app",
    binary = "//go/sig:sig",
    caps = "cap_net_admin+ei",
    cmd = [
        "--config",
        "/share/conf/sig.toml",
    ],
    entrypoint = ["/app/sig"],
    workdir = "/share",
)
