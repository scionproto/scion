module(
    name = "scion",
    repo_name = "com_github_scionproto_scion",
)

bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "rules_go", version = "0.53.0", repo_name = "io_bazel_rules_go")
single_version_override(
    module_name = "rules_go",
    patches = ["//patches:io_bazel_rules_go/import.patch"],
)

bazel_dep(name = "gazelle", version = "0.42.0", repo_name = "bazel_gazelle")
bazel_dep(name = "rules_pkg", version = "1.0.1")
bazel_dep(name = "aspect_rules_js", version = "2.1.3")

go_sdk = use_extension("@io_bazel_rules_go//go:extensions.bzl", "go_sdk")
go_sdk.download(version = "1.22.7")

#npm

bazel_dep(name = "rules_nodejs", version = "6.3.0")

node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node", dev_dependency = True)
node.toolchain(node_version = "16.19.0")

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)
npm.npm_translate_lock(
    name = "npm",
    pnpm_lock = "@com_github_scionproto_scion//private/mgmtapi/tools:pnpm-lock.yaml",
    verify_node_modules_ignored = "@com_github_scionproto_scion//:.bazelignore",
)
use_repo(npm, "npm")

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm")
use_repo(pnpm, "pnpm")

bazel_dep(name = "aspect_bazel_lib", version = "2.13.0")
bazel_dep(name = "apple_rules_lint", version = "0.4.0")
bazel_dep(name = "rules_proto", version = "7.1.0")
bazel_dep(name = "protobuf", version = "29.3", repo_name = "com_google_protobuf")
bazel_dep(name = "rules_python", version = "1.1.0")
bazel_dep(name = "rules_oci", version = "2.2.2")

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "scion_python_deps",
    python_version = "3.11",
    requirements_lock = "//tools/env/pip3:requirements.txt"
)
use_repo(pip, "scion_python_deps")

go_deps = use_extension("@bazel_gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
    "at_zgo_zcache_v2",
    "com_connectrpc_connect",
    "com_github_antlr4_go_antlr_v4",
    "com_github_buildkite_go_buildkite_v2",
    "com_github_dchest_cmac",
    "com_github_deepmap_oapi_codegen_v2",
    "com_github_fatih_color",
    "com_github_getkin_kin_openapi",
    "com_github_go_chi_chi_v5",
    "com_github_go_chi_cors",
    "com_github_golang_mock",
    "com_github_google_go_cmp",
    "com_github_gopacket_gopacket",
    "com_github_grpc_ecosystem_go_grpc_middleware",
    "com_github_grpc_ecosystem_go_grpc_prometheus",
    "com_github_grpc_ecosystem_grpc_opentracing",
    "com_github_hashicorp_golang_lru_arc_v2",
    "com_github_iancoleman_strcase",
    "com_github_lestrrat_go_jwx",
    "com_github_mattn_go_isatty",
    "com_github_mattn_go_sqlite3",
    "com_github_mdlayher_arp",
    "com_github_mdlayher_ethernet",
    "com_github_oapi_codegen_runtime",
    "com_github_olekukonko_tablewriter",
    "com_github_opentracing_opentracing_go",
    "com_github_patrickmn_go_cache",
    "com_github_pelletier_go_toml_v2",
    "com_github_pkg_errors",
    "com_github_prometheus_client_golang",
    "com_github_prometheus_procfs",
    "com_github_quic_go_quic_go",
    "com_github_sergi_go_diff",
    "com_github_songgao_water",
    "com_github_spf13_cobra",
    "com_github_spf13_pflag",
    "com_github_spf13_viper",
    "com_github_stretchr_testify",
    "com_github_uber_jaeger_client_go",
    "com_github_vishvananda_netlink",
    "in_gopkg_yaml_v2",
    "org_go4_netipx",
    "org_golang_google_grpc",
    "org_golang_google_grpc_examples",
    "org_golang_google_protobuf",
    "org_golang_x_crypto",
    "org_golang_x_net",
    "org_golang_x_sync",
    "org_golang_x_sys",
    "org_golang_x_tools",
    "org_modernc_sqlite",
    "org_uber_go_goleak",
    "org_uber_go_zap",
)

non_module_deps = use_extension(":non_module_deps.bzl", "non_module_deps")
use_repo(
    non_module_deps,
    "com_github_bazelbuild_buildtools",
)

# -- bazel_dep definitions -- #

# -- use_repo_rule statements -- #

# -- repo definitions -- #
