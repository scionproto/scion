load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "handler.go",
        "metrics.go",
    ],
    importpath = "github.com/scionproto/scion/go/cs/revocation",
    visibility = ["//visibility:public"],
    deps = [
        "//go/cs/metrics:go_default_library",
        "//go/lib/common:go_default_library",
        "//go/lib/ctrl/path_mgmt:go_default_library",
        "//go/lib/infra:go_default_library",
        "//go/lib/infra/messenger:go_default_library",
        "//go/lib/log:go_default_library",
        "//go/lib/prom:go_default_library",
        "//go/proto:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = ["handler_test.go"],
    embed = [":go_default_library"],
    deps = [
        "//go/cs/metrics:go_default_library",
        "//go/cs/revocation/mock_revocation:go_default_library",
        "//go/lib/common:go_default_library",
        "//go/lib/ctrl/ack:go_default_library",
        "//go/lib/ctrl/path_mgmt:go_default_library",
        "//go/lib/infra:go_default_library",
        "//go/lib/infra/messenger:go_default_library",
        "//go/lib/infra/mock_infra:go_default_library",
        "//go/lib/infra/modules/trust:go_default_library",
        "//go/lib/keyconf:go_default_library",
        "//go/lib/log:go_default_library",
        "//go/lib/scrypto:go_default_library",
        "//go/lib/util:go_default_library",
        "//go/lib/xtest:go_default_library",
        "//go/lib/xtest/matchers:go_default_library",
        "//go/proto:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
    ],
)
