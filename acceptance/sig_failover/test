#!/bin/bash

# This test checks whether path failover in SIG works as expected.
# It sets up two ASes connected by two paths. It disables one path
# and checks whether IP traffic is still going through. Then it
# enables the first path and disables the other one. It tries to pass
# IP packets between the ASes again.

# Docker topology:
#
# +---------------------------+     +---------------------------+
# | dispatcher1 network stack |     | dispatcher2 network stack |
# |    +-----------------+    |     |    +-----------------+    |
# |    |     tester1     |    |     |    |     tester2     |    |
# |    +-----------------+    |     |    +-----------------+    |
# |                           |     |                           |
# |    +-----------------+    |     |    +-----------------+    |
# |    |      sig1       |    |     |    |      sig2       |    |
# |    +-----------------+    |     |    +-----------------+    |
# |                           |     |                           |
# |    +-----------------+    |     |    +-----------------+    |
# |    |   dispatcher1   |    |     |    |   dispatcher2   |    |
# |    |     :30041      |    |     |    |     :30041      |    |
# |    +-----------------+    |     |    +-----------------+    |
# |                           |     |                           |
# |    (route via dev sig)    |     |    (route via dev sig)    |
# |                           |     |                           |
# |      242.254.100.2/24     |     |     242.254.200.2/24      |
# +------------+--------------+     +-------------+-------------+
#              |                                  |
#   +----------+------------+         +-----------+-----------+
#   |        bridge1        |         |       bridge2         |
#   |    242.254.100.1/24   |         |   242.254.200.1/24    |
#   +-+-+-------------------+         +-------------------+-+-+
#     | |                                                 | |
#     | | +---------------------------------------------+ | |
#     | +-+                    patha                    +-+ |
#     |   | 242.254.100.3:50000 <-> 242.254.200.3:50000 |   |
#     |   +---------------------------------------------+   |
#     |                                                     |
#     |   +---------------------------------------------+   |
#     +---+                    pathb                    +----
#         | 242.254.100.3:50000 <-> 242.254.200.4:50000 |
#         +---------------------------------------------+

run_test() {(set -e
    # Register with the docker daemon the docker images bazel created
    # (--norun is used for docker images created via go_image because the script runs them by default)
    bash go/tools/udpproxy/udpproxy --norun
    bash acceptance/sig_failover/dispatcher1
    bash acceptance/sig_failover/dispatcher2
    bash acceptance/sig_failover/sig1
    bash acceptance/sig_failover/sig2

    docker-compose -f acceptance/sig_failover/docker-compose.yml up -d dispatcher1 dispatcher2 sig1 sig2

    # Set up forward route on network stack 1 and 2 through sig tunnel device
    # If this fails, the test is not stopped.
    docker-compose -f acceptance/sig_failover/docker-compose.yml run --rm tester1 ip route add 242.254.200.2/32 dev sig || true
    docker-compose -f acceptance/sig_failover/docker-compose.yml run --rm tester2 ip route add 242.254.100.2/32 dev sig || true

    echo "Initial ping tests"
    docker-compose -f acceptance/sig_failover/docker-compose.yml up -d patha pathb
    docker-compose -f acceptance/sig_failover/docker-compose.yml run --rm tester1 ping -c 3 242.254.200.2

    echo "Shutting down path A"
    docker-compose -f acceptance/sig_failover/docker-compose.yml stop patha
    echo "Check pings still work"
    docker-compose -f acceptance/sig_failover/docker-compose.yml run --rm tester1 ping -c 3 242.254.200.2

    echo "Shutting down path B, bringing up path A"
    docker-compose -f acceptance/sig_failover/docker-compose.yml stop pathb
    docker-compose -f acceptance/sig_failover/docker-compose.yml start patha
    echo "Check pings still work"
    docker-compose -f acceptance/sig_failover/docker-compose.yml run --rm tester1 ping -c 3 242.254.200.2

    echo "Bringing up bath B"
    docker-compose -f acceptance/sig_failover/docker-compose.yml start pathb
    echo "Check pings still work"
    docker-compose -f acceptance/sig_failover/docker-compose.yml run --rm tester1 ping -c 3 242.254.200.2
)}

set +e
run_test
RC=$?

# Write outputs to bazel directory
OUTPUT_DIR=$TEST_UNDECLARED_OUTPUTS_DIR
mkdir -p $OUTPUT_DIR/logs

for FILE in sig1-ff00_0_110.log sig1-ff00_0_111.log disp_1-ff00_0_110.log disp_1-ff00_0_111.log; do
    docker-compose -f acceptance/sig_failover/docker-compose.yml run log_exporter cat /share/logs/$FILE > $OUTPUT_DIR/logs/$FILE
done

docker-compose -f acceptance/sig_failover/docker-compose.yml down -v

exit $RC
