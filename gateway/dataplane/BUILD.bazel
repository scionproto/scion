load("//tools/lint:go.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "atomicroutingtable.go",
        "diagnostics.go",
        "doc.go",
        "encoder.go",
        "framebuf.go",
        "ingressserver.go",
        "ipforwarder.go",
        "pktring.go",
        "rlist.go",
        "routingtable.go",
        "sender.go",
        "session.go",
        "worker.go",
    ],
    importpath = "github.com/scionproto/scion/gateway/dataplane",
    visibility = ["//visibility:public"],
    deps = [
        "//gateway/control:go_default_library",
        "//gateway/pktcls:go_default_library",
        "//pkg/addr:go_default_library",
        "//pkg/log:go_default_library",
        "//pkg/metrics:go_default_library",
        "//pkg/private/common:go_default_library",
        "//pkg/private/serrors:go_default_library",
        "//pkg/slayers:go_default_library",
        "//pkg/snet:go_default_library",
        "//pkg/snet/path:go_default_library",
        "//private/ringbuf:go_default_library",
        "@com_github_google_gopacket//:go_default_library",
        "@com_github_google_gopacket//layers:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "atomicroutingtable_test.go",
        "diagnostics_test.go",
        "encoder_test.go",
        "export_test.go",
        "ipforwarder_test.go",
        "pktring_test.go",
        "routingtable_test.go",
        "sender_test.go",
        "session_test.go",
        "worker_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":go_default_library"],
    deps = [
        "//gateway/control:go_default_library",
        "//gateway/control/mock_control:go_default_library",
        "//gateway/pktcls:go_default_library",
        "//pkg/private/mocks/io/mock_io:go_default_library",
        "//pkg/private/mocks/net/mock_net:go_default_library",
        "//pkg/private/serrors:go_default_library",
        "//pkg/private/xtest:go_default_library",
        "//pkg/snet:go_default_library",
        "//pkg/snet/mock_snet:go_default_library",
        "//pkg/snet/path:go_default_library",
        "//private/ringbuf:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_google_gopacket//:go_default_library",
        "@com_github_google_gopacket//layers:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
        "@org_uber_go_goleak//:go_default_library",
    ],
)
