steps:
  - label: ":bazel: Build scion code"
    if: build.message !~ /\[doc\]/
    command:
      # create version files so that deb and rpm release targets work.
      - ./tools/package-version 0.1.0-citest
      - bazel build --announce_rc //:all
    key: build
    retry:
      automatic:
        - exit_status: -1  # Agent was lost
        - exit_status: 255 # Forced agent shutdown
    timeout_in_minutes: 10
  - label: "Revocation tests"
    if: build.message !~ /\[doc\]/
    command:
      - bazel build //:scion //:scion-ci >/dev/null 2>&1
      - tar -kxf bazel-bin/scion.tar -C bin --overwrite
      - tar -kxf bazel-bin/scion-ci.tar -C bin --overwrite
      - ./scion.sh topology -t
      - ./scion.sh run && sleep 10
      - ./bin/end2end_integration -log.console warn
      - ./integration/revocation_test.sh
    key: revocation_tests
    plugins:
      - scionproto/metahook#v0.3.0:
          post-command: |
            echo "--- Shutting down SCION topology"
            ./scion.sh stop
            echo "SCION topology successfully shut down"
    parallelism: 10
    artifact_paths:
      - "artifacts.out/**/*"
    retry:
      automatic:
        - exit_status: -1  # Agent was lost
        - exit_status: 255 # Forced agent shutdown
  - label: "E2E-Integration: {cert_req,pp,end2end,scmp}_integration"
    if: build.message !~ /\[doc\]/
    command:
    - bazel build //:scion //:scion-ci >/dev/null 2>&1
    - tar -kxf bazel-bin/scion.tar -C bin --overwrite
    - tar -kxf bazel-bin/scion-ci.tar -C bin --overwrite
    - ./scion.sh topology -t
    - ./scion.sh run && sleep 10
    # FIXME(roosd): enable again
    #- ./bin/cert_req_integration -log.console warn
    - ./bin/pp_integration -log.console warn
    - ./bin/scmp_integration -log.console warn
    - ./bin/end2end_integration -log.console warn
    plugins:
      - scionproto/metahook#v0.3.0:
          post-command: |
            echo "--- Shutting down SCION topology"
            ./scion.sh stop
            echo "SCION topology successfully shut down"
    parallelism: 10
    artifact_paths:
      - "artifacts.out/**/*"
    timeout_in_minutes: 10
    key: e2e_integration_tests
    retry:
      automatic:
        - exit_status: -1  # Agent was lost
        - exit_status: 255 # Forced agent shutdown
  - label: ":docker: Integration: end2end_integration full topology"
    if: build.message !~ /\[doc\]/
    command:
    - ./scion.sh topology -t -d
    - ./scion.sh run
    - docker-compose -f gen/scion-dc.yml -p scion up -d $(docker-compose -f gen/scion-dc.yml config --services | grep tester)
    - sleep 10
    - ./bin/end2end_integration -d -log.console warn
    plugins:
      - scionproto/metahook#v0.3.0:
          post-command: |
            echo "--- Shutting down SCION topology"
            ./scion.sh stop
            echo "SCION topology successfully shut down"
    parallelism: 10
    artifact_paths:
      - "artifacts.out/**/*"
    timeout_in_minutes: 10
    key: docker_integration_e2e_default
    retry:
      automatic:
        - exit_status: -1  # Agent was lost
        - exit_status: 255 # Forced agent shutdown
