// Code generated by capnpc-go. DO NOT EDIT.

package proto

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type IFID struct{ capnp.Struct }

// IFID_TypeID is the unique identifier for the type IFID.
const IFID_TypeID = 0x9d95fb13f80529b9

func NewIFID(s *capnp.Segment) (IFID, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return IFID{st}, err
}

func NewRootIFID(s *capnp.Segment) (IFID, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return IFID{st}, err
}

func ReadRootIFID(msg *capnp.Message) (IFID, error) {
	root, err := msg.RootPtr()
	return IFID{root.Struct()}, err
}

func (s IFID) String() string {
	str, _ := text.Marshal(0x9d95fb13f80529b9, s.Struct)
	return str
}

func (s IFID) OrigIF() uint64 {
	return s.Struct.Uint64(0)
}

func (s IFID) SetOrigIF(v uint64) {
	s.Struct.SetUint64(0, v)
}

// IFID_List is a list of IFID.
type IFID_List struct{ capnp.List }

// NewIFID creates a new list of IFID.
func NewIFID_List(s *capnp.Segment, sz int32) (IFID_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return IFID_List{l}, err
}

func (s IFID_List) At(i int) IFID { return IFID{s.List.Struct(i)} }

func (s IFID_List) Set(i int, v IFID) error { return s.List.SetStruct(i, v.Struct) }

func (s IFID_List) String() string {
	str, _ := text.MarshalList(0x9d95fb13f80529b9, s.List)
	return str
}

// IFID_Promise is a wrapper for a IFID promised by a client call.
type IFID_Promise struct{ *capnp.Pipeline }

func (p IFID_Promise) Struct() (IFID, error) {
	s, err := p.Pipeline.Struct()
	return IFID{s}, err
}

const schema_9cb1ca08a160c787 = "x\xda2\xb8\xc3\xe2\xc0d\xc8\xaa\xaf\xc6\xc0\x10\xbc\x87" +
	"\x91\x95\xed\xffNM\xd6\x1f\xc2\xbf\xa7\xcee\x08\xe4f" +
	"d\xfc\xdf~<a!\xc7\xa9\x8ds\x18X\xd8\x19\x18" +
	"\x84\xff\x0a5\x093\x0aCX\xf6\x0c\xff\xa1p\xf7\xff" +
	"\xcc\xb4\xcc\x14\xbd\xe4\xc4\x02\xc6\xbc\x02+O7O\x17" +
	"\x86\x00F\xc6@\x16f\x16\x06\x06\x16F\x06\x06A^" +
	"+\x06\x86@\x0ef\xc6@\x11&F\xfb\xfc\xa2\xcct" +
	"O7FN\x06&FN\x06F@\x00\x00\x00\xff\xff" +
	"j\x96 o"

func init() {
	schemas.Register(schema_9cb1ca08a160c787,
		0x9d95fb13f80529b9)
}
