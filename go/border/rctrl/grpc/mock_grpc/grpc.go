// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/scionproto/scion/go/border/rctrl/grpc (interfaces: IfStateHandler)

// Package mock_grpc is a generated GoMock package.
package mock_grpc

import (
	gomock "github.com/golang/mock/gomock"
	grpc "github.com/scionproto/scion/go/border/rctrl/grpc"
	reflect "reflect"
)

// MockIfStateHandler is a mock of IfStateHandler interface
type MockIfStateHandler struct {
	ctrl     *gomock.Controller
	recorder *MockIfStateHandlerMockRecorder
}

// MockIfStateHandlerMockRecorder is the mock recorder for MockIfStateHandler
type MockIfStateHandlerMockRecorder struct {
	mock *MockIfStateHandler
}

// NewMockIfStateHandler creates a new mock instance
func NewMockIfStateHandler(ctrl *gomock.Controller) *MockIfStateHandler {
	mock := &MockIfStateHandler{ctrl: ctrl}
	mock.recorder = &MockIfStateHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIfStateHandler) EXPECT() *MockIfStateHandlerMockRecorder {
	return m.recorder
}

// UpdateState mocks base method
func (m *MockIfStateHandler) UpdateState(arg0 []grpc.InterfaceState) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateState", arg0)
}

// UpdateState indicates an expected call of UpdateState
func (mr *MockIfStateHandlerMockRecorder) UpdateState(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateState", reflect.TypeOf((*MockIfStateHandler)(nil).UpdateState), arg0)
}
