load("@io_bazel_rules_go//go:def.bzl", "go_binary")
load("@io_bazel_rules_docker//container:container.bzl", "container_image")
load("//acceptance/common:raw.bzl", "raw_test")
load("//tools/lint:go.bzl", "go_library")
load("//:scion.bzl", "scion_go_binary")

go_library(
    name = "go_default_library",
    srcs = ["main.go"],
    importpath = "github.com/scionproto/scion/acceptance/router_newbenchmark",
    visibility = ["//visibility:private"],
    deps = [
        "//acceptance/router_newbenchmark/cases:go_default_library",
        "//pkg/log:go_default_library",
        "//pkg/private/serrors:go_default_library",
        "//pkg/scrypto:go_default_library",
        "//pkg/slayers:go_default_library",
        "//private/keyconf:go_default_library",
        "@com_github_google_gopacket//:go_default_library",
        "@com_github_google_gopacket//afpacket:go_default_library",
        "@com_github_google_gopacket//layers:go_default_library",
        "@com_github_spf13_cobra//:go_default_library",
    ],
)

scion_go_binary(
    name = "brload",
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
)

exports_files([
    "conf",
    "test.py",
])

args = [
    "--executable",
    "brload:$(location //acceptance/router_newbenchmark:brload)",
    "--container-loader=posix-router:latest#$(location //docker:posix_router)",
]

data = [
    ":conf",
    "//docker:posix_router",
    ":brload",
]

raw_test(
    name = "test",
    src = "test.py",
    args = args,
    data = data,
    homedir = "$(rootpath //docker:posix_router)",
    # This test uses sudo and accesses /var/run/netns.
    local = True,
)

go_binary(
    name = "router_newbenchmark",
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
)
