load("//lint:go.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "atomicroutingtable.go",
        "diagnostics.go",
        "doc.go",
        "encoder.go",
        "framebuf.go",
        "ingressserver.go",
        "ipforwarder.go",
        "pktring.go",
        "rlist.go",
        "routingtable.go",
        "sender.go",
        "session.go",
        "worker.go",
    ],
    importpath = "github.com/scionproto/scion/go/pkg/gateway/dataplane",
    visibility = ["//visibility:public"],
    deps = [
        "//go/lib/addr:go_default_library",
        "//go/lib/common:go_default_library",
        "//go/lib/log:go_default_library",
        "//go/lib/metrics:go_default_library",
        "//go/lib/pktcls:go_default_library",
        "//go/lib/ringbuf:go_default_library",
        "//go/lib/serrors:go_default_library",
        "//go/lib/slayers:go_default_library",
        "//go/lib/snet:go_default_library",
        "//go/lib/sock/reliable:go_default_library",
        "//go/pkg/gateway/control:go_default_library",
        "@com_github_google_gopacket//:go_default_library",
        "@com_github_google_gopacket//layers:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "atomicroutingtable_test.go",
        "diagnostics_test.go",
        "encoder_test.go",
        "export_test.go",
        "ipforwarder_test.go",
        "pktring_test.go",
        "routingtable_test.go",
        "sender_test.go",
        "session_test.go",
        "worker_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":go_default_library"],
    deps = [
        "//go/lib/mocks/io/mock_io:go_default_library",
        "//go/lib/mocks/net/mock_net:go_default_library",
        "//go/lib/pktcls:go_default_library",
        "//go/lib/ringbuf:go_default_library",
        "//go/lib/serrors:go_default_library",
        "//go/lib/snet:go_default_library",
        "//go/lib/snet/mock_snet:go_default_library",
        "//go/lib/spath:go_default_library",
        "//go/lib/xtest:go_default_library",
        "//go/pkg/gateway/control:go_default_library",
        "//go/pkg/gateway/control/mock_control:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_google_gopacket//:go_default_library",
        "@com_github_google_gopacket//layers:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
        "@org_uber_go_goleak//:go_default_library",
    ],
)
